<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://getaclue.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://getaclue.github.io/" rel="alternate" type="text/html" /><updated>2018-10-09T22:52:45-04:00</updated><id>https://getaclue.github.io/</id><title type="html">Alex Kluew</title><subtitle>Personal website and blog of Alex Kluew</subtitle><entry><title type="html">Trying out Aho–Corasick algorithm</title><link href="https://getaclue.github.io/blog/trying-out-aho-corasick-algorithm" rel="alternate" type="text/html" title="Trying out Aho–Corasick algorithm" /><published>2018-10-09T00:00:00-04:00</published><updated>2018-10-09T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/trying-out-aho-corasick-algorithm</id><content type="html" xml:base="https://getaclue.github.io/blog/trying-out-aho-corasick-algorithm">&lt;p&gt;Today I found &lt;a href=&quot;https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_algorithm&quot;&gt;Aho–Corasick algorithm&lt;/a&gt;. I was instantly hooked on wanting to try it out. Since I am spending more time with Java, most of the day was spent playing with an implementation of this algorithm &lt;em&gt;and maven&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I will tell you what, I was pleasantly surprised so far. I need to spend some more time on this but it looks like a promising solution. I wanted to use something like this on the &lt;a href=&quot;https://elderoost.com/&quot;&gt;elderoost&lt;/a&gt; project. So, here is what my MVP looks like so far.&lt;/p&gt;

&lt;p&gt;For this problem I wanted to use a large piece of text as input. For example, I was reading the news earlier and I found a good candidate. I used the following news article as my input:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ontario has promised to add 15,000 new long-term care beds across of the province in the next five years and increasing that to 30,000 in a decade.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Of the 6,000 being put in place immediately, 80 of them will be in Brant County.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Your government is moving forward quickly to expand access to long-term care beds,” said Christine Elliott, the Deputy Premier and Minister of Health and Long-Term Care in a press release. “”More long-term care beds will help take the pressure off hospitals, end hallway medicine, allow doctors and nurses to work more efficiently and provide faster health care for Ontario patients and their families.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The 80 beds will be shared between John Noble Home and Fox Ridge Care Community (Sienna Senior Living).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The province has also promised more than 1,100 beds and spaces in hospitals and community settings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;“This is good news for the people of Brantford-Brant,” said MPP Will Bouma in the release.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;which I grabbed from &lt;a href=&quot;https://kitchener.ctvnews.ca/brant-county-to-get-80-new-long-term-care-beds-1.4125702&quot;&gt;here&lt;/a&gt; so you know it is very fresh — &lt;code class=&quot;highlighter-rouge&quot;&gt;Published Monday, October 8, 2018 5:31PM EDT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I then ran the MVP implementation against this input, and surprise surprise. I got the expected results of two hits on this article. Not only that, I also have the precise location in the article.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;672:687]&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;John Noble Home
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;692:716]&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Fox Ridge Care Community
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And you know what? This solution brought me closer to what I wanted to do and how I wanted to do it. My previous implementation was using &lt;a href=&quot;https://www.elastic.co/&quot;&gt;Elasticsearch&lt;/a&gt; but I never liked that approach. This is why that solution is not public. It did not seem to meet the requirements that I had and it did not produce repetitive results.&lt;/p&gt;

&lt;p&gt;I’m excited spend some more time on this.&lt;/p&gt;

&lt;p&gt;Oh yes, almost forgot. I used &lt;a href=&quot;https://github.com/hankcs/AhoCorasickDoubleArrayTrie&quot;&gt;AhoCorasickDoubleArrayTrie&lt;/a&gt; implementation.&lt;/p&gt;

&lt;h2 id=&quot;maven-frustrations&quot;&gt;Maven frustrations&lt;/h2&gt;

&lt;p&gt;I’ve spent a minute today trying to sort out maven. Unfortunately, as I dug deeper, I found out that there was a play of two installations. I need to untangle this mess:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;
/Users/&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;/.jenv/versions/openjdk64-11
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jenv enable-plugin maven
maven plugin activated
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;maven
zsh: &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;not found: maven
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mvn
zsh: &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;not found: mvn
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jenv &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;maven
jenv: maven: &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;not found
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jenv &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;mvn
jenv: mvn: &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;not found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;p&gt;Today’s random link of the day: &lt;a href=&quot;https://xlinux.nist.gov/dads/&quot;&gt;Dictionary of Algorithms and Data Structures&lt;/a&gt; (DADS).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://winterbe.com/posts/2014/07/31/java8-stream-tutorial-examples/&quot;&gt;https://winterbe.com/posts/2014/07/31/java8-stream-tutorial-examples/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/deploy-a-java-web-application-that-launches-with-jetty-runner&quot;&gt;https://devcenter.heroku.com/articles/deploy-a-java-web-application-that-launches-with-jetty-runner&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.dropwizard.io/1.3.5/docs/getting-started.html&quot;&gt;https://www.dropwizard.io/1.3.5/docs/getting-started.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ianlunn.co.uk/articles/quickly-showhide-hidden-files-mac-os-x-mavericks/&quot;&gt;https://ianlunn.co.uk/articles/quickly-showhide-hidden-files-mac-os-x-mavericks/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hankcs/HanLP&quot;&gt;https://github.com/hankcs/HanLP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html&quot;&gt;http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/search?q=ahocorasick&quot;&gt;https://github.com/search?q=ahocorasick&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/maithilish/maven-examples&quot;&gt;https://github.com/maithilish/maven-examples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000153164-Maven-dependency-in-project-module&quot;&gt;https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000153164-Maven-dependency-in-project-module&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/robert-bor/aho-corasick&quot;&gt;https://github.com/robert-bor/aho-corasick&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://collectiveidea.com/blog/archives/2015/05/29/how-to-pluck-like-a-rails-pro&quot;&gt;https://collectiveidea.com/blog/archives/2015/05/29/how-to-pluck-like-a-rails-pro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/26698176&quot;&gt;https://stackoverflow.com/a/26698176&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://xlinux.nist.gov/dads/HTML/stringMatching.html&quot;&gt;https://xlinux.nist.gov/dads/HTML/stringMatching.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://xlinux.nist.gov/dads/HTML/ahoCorasick.html&quot;&gt;https://xlinux.nist.gov/dads/HTML/ahoCorasick.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cjgdev/aho_corasick&quot;&gt;https://github.com/cjgdev/aho_corasick&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1099985/algorithm-for-multiple-word-matching-in-text/1100010#1100010&quot;&gt;https://stackoverflow.com/questions/1099985/algorithm-for-multiple-word-matching-in-text/1100010#1100010&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5868369/how-to-read-a-large-text-file-line-by-line-using-java/5868528#5868528&quot;&gt;https://stackoverflow.com/questions/5868369/how-to-read-a-large-text-file-line-by-line-using-java/5868528#5868528&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4716503/reading-a-plain-text-file-in-java/41576248#41576248&quot;&gt;https://stackoverflow.com/questions/4716503/reading-a-plain-text-file-in-java/41576248#41576248&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="software engineering" /><category term="algorithms" /><summary type="html">This solution brought me closer to what I wanted to do and how I wanted to do it.</summary></entry><entry><title type="html">If you don’t share your project, did you actually make it?</title><link href="https://getaclue.github.io/blog/if-you-dont-share-your-project-did-you-actually-make-it" rel="alternate" type="text/html" title="If you don't share your project, did you actually make it?" /><published>2018-10-08T00:00:00-04:00</published><updated>2018-10-08T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/if-you-dont-share-your-project-did-you-actually-make-it</id><content type="html" xml:base="https://getaclue.github.io/blog/if-you-dont-share-your-project-did-you-actually-make-it">&lt;p&gt;Today, I did a few quick fixes to the current layout of this website.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I added &lt;code class=&quot;highlighter-rouge&quot;&gt;« Previous Essay&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Next Essay »&lt;/code&gt; links to each piece of writing at the end for easier navigation&lt;/p&gt;

    &lt;p&gt;This required a slight modification to the templates. Found the following article &lt;a href=&quot;https://david.elbe.me/jekyll/2015/06/20/how-to-link-to-next-and-previous-post-with-jekyll.html&quot;&gt;Jekyll – how to link to next/previous post on your blog&lt;/a&gt; very useful in this venture. In fact, it is very simple. Like so:&lt;/p&gt;

    &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;.not-post-page-navigation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-around&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;not-post-page-navigation&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  {% if page.previous.url %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{page.previous.url}}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{page.previous.title}}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;laquo;&lt;/span&gt;
    Previous Essay&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  {% endif %}
  {% if page.next.url %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{page.next.url}}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{page.next.title}}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Next Essay &lt;span class=&quot;ni&quot;&gt;&amp;amp;raquo;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  {% endif %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;I also had to look up how I could show you the code above because it had some inline liquid syntactic sugar. So the parser simply interpreted the code about as any regular code. You need to add &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;endraw&lt;/code&gt; tags before the code and proceed as before! See &lt;a href=&quot;https://github.com/github/linguist/issues/3690&quot;&gt;Liquid syntax highlighting in Markdown&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I also re-wrote the little script that I wrote in Swift a few days ago in Java. I’m basically jumping between languages because why not. Had some hiccups with looking up regular expressions syntax in Java. Here is the current working copy:&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Please do like this: LazyTitleMaker &amp;lt;title&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;DateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateStyleFormat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currDateText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateStyleFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputWSReplaced&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replaceAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\\s+&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sanitizedString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputWSReplaced&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replaceAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[\\',?]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultantURI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currDateText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sanitizedString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultantURI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.markdown&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Length: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultantURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Need to fix the following code that you see above at some later time&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sanitizedString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputWSReplaced&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replaceAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[\\',?]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;I wanted to find all characters in the string that are not words and not spaces. I expected &lt;code class=&quot;highlighter-rouge&quot;&gt;[^w]&lt;/code&gt; to match to all characters that are not words and &lt;code class=&quot;highlighter-rouge&quot;&gt;[^s]&lt;/code&gt; to match all characters that are not spaces.&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sanitizedString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputWSReplaced&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replaceAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[^\\w\\s]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Similar to how I would do it in JavaScript&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Some Str,in'g?&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[^\w\s]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ /g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;I also changed the about page and the projects page&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I added a new template for the about and projects pages&lt;/p&gt;

    &lt;p&gt;Modified the way images are displayed in the liquid templates. Replaced &lt;code class=&quot;highlighter-rouge&quot;&gt;{:width=&quot;60%&quot;}&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;{:style=&quot;max-width:100%&quot;}&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;I removed the newsletter link at the footer&lt;/li&gt;
  &lt;li&gt;I adjusted my project involvement for Screenhole and Keyframes. Until further notice my involvement is on pause while &lt;a href=&quot;https://thinko.com&quot;&gt;Thinko&lt;/a&gt; focuses on other things. I enjoyed working with the team and hope to do so again the future. Jacob and Pasquale are wonderful.&lt;/li&gt;
  &lt;li&gt;Played with modulo and reminder theories decoding a birthday message &lt;a href=&quot;https://stackoverflow.com/a/37240042&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/3354251&quot;&gt;2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is fun to make things for no reason other than just because. So, what do I think about: &lt;em&gt;If you don’t share your project, did you actually make it?&lt;/em&gt; While I think it depends on the project and the goals, I think that decision is ultimately up to you. It is very easy to fall in the trap of sharing for the sake of sharing. For me — I first look at the project and then I look at the goals. Most likely than not the things that I share I hope others to find useful and educational.&lt;/p&gt;

&lt;p&gt;Links for today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://files.zeroturnaround.com/pdf/zt_regular-expressions-cheat-sheet.pdf&quot;&gt;http://files.zeroturnaround.com/pdf/zt_regular-expressions-cheat-sheet.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://regexr.com/&quot;&gt;https://regexr.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10253516/ruby-regex-replace-non-word-chars-that-are-not-space-chars&quot;&gt;https://stackoverflow.com/questions/10253516/ruby-regex-replace-non-word-chars-that-are-not-space-chars&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tutorials.jenkov.com/java-internationalization/simpledateformat.html&quot;&gt;http://tutorials.jenkov.com/java-internationalization/simpledateformat.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.vogella.com/tutorials/JavaRegularExpressions/article.html&quot;&gt;http://www.vogella.com/tutorials/JavaRegularExpressions/article.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.java2s.com/Tutorials/Java/java.time/LocalDateTime/2720__LocalDateTime.now_.htm&quot;&gt;http://www.java2s.com/Tutorials/Java/java.time/LocalDateTime/2720_&lt;em&gt;LocalDateTime.now&lt;/em&gt;.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/data/manipstrings.html&quot;&gt;https://docs.oracle.com/javase/tutorial/java/data/manipstrings.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.shopify.com/en/themes/liquid/filters/string-filters&quot;&gt;https://help.shopify.com/en/themes/liquid/filters/string-filters&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://devhints.io/jekyll&quot;&gt;https://devhints.io/jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/mikeygee/2626538&quot;&gt;https://gist.github.com/mikeygee/2626538&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/JJediny/a466eed62cee30ad45e2&quot;&gt;https://gist.github.com/JJediny/a466eed62cee30ad45e2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="software engineering" /><summary type="html">When enough candidates know these basics, easy to get into a pattern of asking questions with them.</summary></entry><entry><title type="html">Easy to get into a pattern of asking questions</title><link href="https://getaclue.github.io/blog/easy-to-get-into-a-pattern-of-asking-questions" rel="alternate" type="text/html" title="Easy to get into a pattern of asking questions" /><published>2018-10-06T00:00:00-04:00</published><updated>2018-10-06T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/easy-to-get-into-a-pattern-of-asking-questions</id><content type="html" xml:base="https://getaclue.github.io/blog/easy-to-get-into-a-pattern-of-asking-questions">&lt;p&gt;I like to open up &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;The 6th edition of Cracking the Coding Interview&lt;/a&gt; from time to time. Mainly to keep an up-to-date cheat sheet of things to narrow down during job search. All of the recruiters use some variation of things that is in this book.&lt;/p&gt;

&lt;p&gt;So, I opened it up today and got some quotes from that book in no particular order.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There’s another reason why data structure and algorithm knowledge comes up: because it’s hard to ask problem-solving questions that don’t involve them. It turns out that the vast majority of problem-solving questions involve some of these basics. &lt;strong&gt;When enough candidates know these basics, easy to get into a pattern of asking questions with them&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This quote talks about justifications of asking data structure and algorithm questions. It finishes off with some practical reasoning for this interview structure. You, as an applicant have to remember this. These scenarios are easy to create, modify, and repeat. Additionally, it could save immediate and future employee costs.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Not only might you be &lt;strong&gt;judged harshly&lt;/strong&gt; for not really understanding big 0, but you will also struggle to judge when your algorithm is getting faster or slower.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This quote was in the context of Big O. I’ve personally experienced this in a group setting. It wasn’t during an interview per se but I’ve definitely been caught off guard by this. Some people say maybe you shouldn’t meet your heroes. Maybe that is true. I’ll let you be your own judge of that. In this case, the harsh judgement came from a well known and important person. If I was a fan of this person or their work, I would have found their approach not professional and would not have wanted to work with them. Approach was used on a group of 18-21 year olds.&lt;/p&gt;

&lt;p&gt;I think that this person used this approach as a strategy. A coping mechanism of some sort or a scare tactic. Or perhaps it allowed them to maintain order in their position. It made people less likely to approach them. Made the situation a bit more interesting since employees &lt;em&gt;had&lt;/em&gt; to approach them.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Big O time is the language and metric we use to describe the efficiency of algorithms. Not understanding it thoroughly can really hurt you in developing an algorithm. Not only might you be &lt;strong&gt;judged harshly&lt;/strong&gt; for not really understanding big 0, but you will also struggle to &lt;strong&gt;judge&lt;/strong&gt; when your algorithm is getting faster or slower.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the things that I find interesting about Big O in our industry is the lack of consensus among various parts of this industry. If you know about Big O, then there is very little ambiguity. Most people who are familiar give similar responses.&lt;/p&gt;

&lt;p&gt;There seems to be some kind of this weird distinction of: us (industry) vs. them (academia). This has been so when I was in academia and it is continuing to exist as such. I think this issue comes from the word &lt;em&gt;approximation&lt;/em&gt;. You need some context to what you mean about an approximation. How good do you want it? Should it be a formal approximation? A rough estimate?&lt;/p&gt;

&lt;p&gt;As you continue reading, a few lines down from the quote above we find&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you’ve never covered big O in an &lt;strong&gt;academic setting&lt;/strong&gt;, you &lt;strong&gt;can probably&lt;/strong&gt; skip this subsection.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Academics use big 0, big 0 (theta), and big O (omega) to describe runtimes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In &lt;strong&gt;industry&lt;/strong&gt; (and &lt;strong&gt;therefore in interviews&lt;/strong&gt;), people seem to have merged 0 and O together. Industry’s meaning of big O is closer to what academics mean by 0, in that it would be seen as incorrect to describe printing an array as O(N&lt;sup&gt;2&lt;/sup&gt;). Industry would just say this is O(N).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and then&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For this book, we will use big O in the way that &lt;strong&gt;industry tends&lt;/strong&gt; to use it: By always trying to offer the tightest description of the runtime.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I agree to some of these statements but I also think that it depends.&lt;/p&gt;

&lt;p&gt;Industry may use O(N) as an approximation but they will definitely check if it is not O(N&lt;sup&gt;2&lt;/sup&gt;) by accident. They will definitely do so if money is involved. In other words, while the industry may use O(N) as an approximation, they definitely know how to get to the O(N&lt;sup&gt;2&lt;/sup&gt;) boundary.&lt;/p&gt;

&lt;p&gt;So, dear reader, spend the time and learn. This way you can adjust your answer based on your audience and you can understand. Plus, it is actually helpful when you are making things.&lt;/p&gt;</content><author><name></name></author><category term="software engineering" /><category term="hiring" /><summary type="html">When enough candidates know these basics, easy to get into a pattern of asking questions with them.</summary></entry><entry><title type="html">Swift package manager and links</title><link href="https://getaclue.github.io/blog/swift-package-manager-october-2018" rel="alternate" type="text/html" title="Swift package manager and links" /><published>2018-10-04T00:00:00-04:00</published><updated>2018-10-04T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/swift-package-manager-october-2018</id><content type="html" xml:base="https://getaclue.github.io/blog/swift-package-manager-october-2018">&lt;p&gt;Today I do not have a lot of time left for today. Instead of spending time grinding leetcode for the interviews, I wanted to study swift package manager (SPM). I am wanting to explore Swift and Java as my main [scripting/everything] language(s) moving forward. I’ve never tried SPM before and I’ve been using Swift for almost a year now (come November). So, I figured I should give it a shot and I even had an idea to implement.&lt;/p&gt;

&lt;h2 id=&quot;problem-statement&quot;&gt;Problem Statement&lt;/h2&gt;

&lt;p&gt;Every time I write this piece of content, I have to name this file. I have a specific way I name these files: It goes &lt;code class=&quot;highlighter-rouge&quot;&gt;date-title.markdown&lt;/code&gt; so it is easier for me to reference in the future. When the parser does its magic, it also creates a nice, seo friendly URL that I can share. It gives some context to readers that are reading it right now in October 2018. If you look at the link, you know that it is a fresh article without even reading it ;-) People like me like to read things like this. While it is fine to do it manually once in a while, it became too repetative to me. SPM to the rescue!&lt;/p&gt;

&lt;h2 id=&quot;idea&quot;&gt;Idea&lt;/h2&gt;

&lt;p&gt;Make a cli tool using SPM that can:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;take input from cli&lt;/li&gt;
  &lt;li&gt;input like : &lt;code class=&quot;highlighter-rouge&quot;&gt;$ tool &quot;Swift package manager october 2018&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;and provide output to me so I can copy/paste while I am creating a new file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… oh and I get to write something today ;-)&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;Here is my code:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.swift&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Foundation&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CommandLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isEmpty&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Need some kind of arguments fam&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//let input = &quot;Will end-user applications ever be truly programmable?&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;inputLowerCased&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lowercased&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//print(input)&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dashifyText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;inputTxt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputTxt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isEmpty&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;currDateTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dateFormatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DateFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// For example, short would have the basics: &quot;10/8/16, 10:52 PM&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dateFormatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;short&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dateFormatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;short&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;currDateTimeText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateFormatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currDateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dashifyDateTimeString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;forString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dateTimeString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forString&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateTimeString&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultant&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dashifiedText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dashifyText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputLowerCased&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dateTimeText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dashifyDateTimeString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currDateTimeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;finalString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateTimeText&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dashifiedText&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.markdown&quot;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finalString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;LENGTH: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finalString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and in the process, I’ve tried different things. The struggles were real.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;my error description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ui1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ui2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;val2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SubSequence&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;_moddedSubString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subString&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subString&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;filteredStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateTimeString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filteredStr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;esult&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;splitStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateTimeString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;separator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;filteredStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;splitStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;filteredStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;splitStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Oh and if you actually ran this script then you may notice that it doesn’t exactly create the same URL that you currently see. I had to remove the time from the file name. My actual naming convention is to use days for the files and within the files I have a &lt;code class=&quot;highlighter-rouge&quot;&gt;datePublished&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;dateModified&lt;/code&gt; timestamps.&lt;/p&gt;

&lt;p&gt;If you ran this script it would make something like this as output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// current output
2018-10-04-23-39-swift-package-manager-october-2018.markdown
// what we need
2018-10-04-swift-package-manager-october-2018.markdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is almost there. I will modify it for me and I will leave this up to you if you care as an exercise.&lt;/p&gt;

&lt;p&gt;I’m trying something different here today with you. I am a bit more raw and transparent. I usually wouldn’t have posted the code above. I definitely would have edited it before publishing it. But that is not the point of this exercise.&lt;/p&gt;

&lt;p&gt;What I am attempting to do here is two things at once:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;going off on a random idea and implementing it just because — a challenge;&lt;/li&gt;
  &lt;li&gt;playing with Swift and seeing where that takes me;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And to finish off, I will list the links that I have open for today in no particular order:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Automated_readability_index&quot;&gt;https://en.wikipedia.org/wiki/Automated_readability_index&lt;/a&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;4.71 * (Characters/String) + 0.5 * (String/[String]) - 21.43&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ralfebert.de/ios-examples/uikit/uicatalog-playground/UIButton/&quot;&gt;https://www.ralfebert.de/ios-examples/uikit/uicatalog-playground/UIButton/&lt;/a&gt; -&amp;gt; learning to prototype in Playgrounds&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/squimer/DatePickerDialog-iOS-Swift/pull/86/files&quot;&gt;https://github.com/squimer/DatePickerDialog-iOS-Swift/pull/86/files&lt;/a&gt; -&amp;gt; have issues in recent update to 12.1 of &lt;a href=&quot;https://dailyvibes.ca&quot;&gt;dailyvibes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/squimer/DatePickerDialog-iOS-Swift/blob/f7b0e569f5f29d82837905dfb174b0e04c7b681d/Sources/DatePickerDialog.swift&quot;&gt;https://github.com/squimer/DatePickerDialog-iOS-Swift/blob/f7b0e569f5f29d82837905dfb174b0e04c7b681d/Sources/DatePickerDialog.swift&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://iosdevcenters.blogspot.com/2017/05/uipickerview-example-with-uitoolbar-in.html&quot;&gt;https://iosdevcenters.blogspot.com/2017/05/uipickerview-example-with-uitoolbar-in.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/documentation/uikit/uidatepicker&quot;&gt;https://developer.apple.com/documentation/uikit/uidatepicker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/41361177/sizing-a-uipickerview-inside-a-uialertview&quot;&gt;https://stackoverflow.com/questions/41361177/sizing-a-uipickerview-inside-a-uialertview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;[http://www.streamingmedia.com/Articles/Editorial/Featured-Articles/RTMP-in-the-Age-of-HTTP-Video-Streaming-Dont-Count-it-Out-100&quot;&gt;http://www.streamingmedia.com/Articles/Editorial/Featured-Articles/RTMP-in-the-Age-of-HTTP-Video-Streaming-Dont-Count-it-Out-100&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.streamingmedia.com/Articles/Editorial/Featured-Articles/RTMP-in-the-Age-of-HTTP-Video-Streaming-Dont-Count-it-Out-100909.aspx&quot;&gt;http://www.streamingmedia.com/Articles/Editorial/Featured-Articles/RTMP-in-the-Age-of-HTTP-Video-Streaming-Dont-Count-it-Out-100909.aspx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.streamingmedia.com/&quot;&gt;http://www.streamingmedia.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.quora.com/Which-is-better-for-live-streaming-RTMP-vs-HLS-vs-WebRTC&quot;&gt;https://www.quora.com/Which-is-better-for-live-streaming-RTMP-vs-HLS-vs-WebRTC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/WebRTC&quot;&gt;https://en.wikipedia.org/wiki/WebRTC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/webrtc/samples&quot;&gt;https://github.com/webrtc/samples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vapor-community&quot;&gt;https://github.com/vapor-community&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1991380/what-does-the-operator-do-in-java&quot;&gt;https://stackoverflow.com/questions/1991380/what-does-the-operator-do-in-java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.apple.com/en-ca/HT208309 -&amp;gt; TIL: Apple uses React.js&quot;&gt;https://support.apple.com/en-ca/HT208309 -&amp;gt; TIL: Apple uses React.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18137740&quot;&gt;https://news.ycombinator.com/item?id=18137740&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kalzumeus.com/2015/05/01/talking-about-money/#consulting-rates&quot;&gt;https://www.kalzumeus.com/2015/05/01/talking-about-money/#consulting-rates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2884068/what-is-the-difference-between-a-map-and-a-dictionary&quot;&gt;https://stackoverflow.com/questions/2884068/what-is-the-difference-between-a-map-and-a-dictionary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Map_%28higher-order_function%29&quot;&gt;https://en.wikipedia.org/wiki/Map_%28higher-order_function%29&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.canada.ca/en/public-service-commission/jobs/services/gc-jobs.html&quot;&gt;https://www.canada.ca/en/public-service-commission/jobs/services/gc-jobs.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.enekoalonso.com/articles/creating-command-line-tools-with-swift-package-manager&quot;&gt;https://www.enekoalonso.com/articles/creating-command-line-tools-with-swift-package-manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.enekoalonso.com/articles/parsing-command-line-arguments-with-swift-package-manager-argument-parser&quot;&gt;https://www.enekoalonso.com/articles/parsing-command-line-arguments-with-swift-package-manager-argument-parser&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.enekoalonso.com/articles/handling-commands-with-swift-package-manager&quot;&gt;https://www.enekoalonso.com/articles/handling-commands-with-swift-package-manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.swiftbysundell.com/posts/building-a-command-line-tool-using-the-swift-package-manager&quot;&gt;https://www.swiftbysundell.com/posts/building-a-command-line-tool-using-the-swift-package-manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/31443645/simplest-way-to-throw-an-error-exception-with-a-custom-message-in-swift-2&quot;&gt;https://stackoverflow.com/questions/31443645/simplest-way-to-throw-an-error-exception-with-a-custom-message-in-swift-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/24070450/how-to-get-the-current-time-as-datetime&quot;&gt;https://stackoverflow.com/questions/24070450/how-to-get-the-current-time-as-datetime&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://goshdarnclosuresyntax.com/&quot;&gt;http://goshdarnclosuresyntax.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.swift.org/swift-book/LanguageGuide/Closures.html&quot;&gt;https://docs.swift.org/swift-book/LanguageGuide/Closures.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learnappmaking.com/closures-swift-how-to/&quot;&gt;https://learnappmaking.com/closures-swift-how-to/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/documentation/swift/swift_standard_library&quot;&gt;https://developer.apple.com/documentation/swift/swift_standard_library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/43261580/how-can-i-convert-a-single-character-type-to-uppercase&quot;&gt;https://stackoverflow.com/questions/43261580/how-can-i-convert-a-single-character-type-to-uppercase&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/28503449/swift-replace-substring-regex&quot;&gt;https://stackoverflow.com/questions/28503449/swift-replace-substring-regex&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html#&quot;&gt;https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html#&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@johnsundell/building-a-command-line-tool-using-the-swift-package-manager-3dd96ce360b1&quot;&gt;https://medium.com/@johnsundell/building-a-command-line-tool-using-the-swift-package-manager-3dd96ce360b1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://timingapp.com/changes#2018_3&quot;&gt;https://timingapp.com/changes#2018_3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mediaatelier.com/GrandTotal5/?ref=timing&quot;&gt;https://www.mediaatelier.com/GrandTotal5/?ref=timing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ltebean/Live&quot;&gt;https://github.com/ltebean/Live&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kishikawakatsumi/KeychainAccess&quot;&gt;https://github.com/kishikawakatsumi/KeychainAccess&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/neoneye/SwiftyFORM&quot;&gt;https://github.com/neoneye/SwiftyFORM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ortuman/SwiftForms&quot;&gt;https://github.com/ortuman/SwiftForms&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ra1028/Former&quot;&gt;https://github.com/ra1028/Former&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/Eureka&quot;&gt;https://github.com/xmartlabs/Eureka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/matteocrippa/awesome-swift#form&quot;&gt;https://github.com/matteocrippa/awesome-swift#form&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.appcoda.com/vision-framework-introduction&quot;&gt;https://www.appcoda.com/vision-framework-introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.toronto.ca/business-economy/business-start-ups/success-stories-newsletter/small-business-month/&quot;&gt;https://www.toronto.ca/business-economy/business-start-ups/success-stories-newsletter/small-business-month/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/documentation/foundation/url_loading_system/downloading_files_in_the_background&quot;&gt;https://developer.apple.com/documentation/foundation/url_loading_system/downloading_files_in_the_background&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/documentation/foundation/urlsessiondatatask&quot;&gt;https://developer.apple.com/documentation/foundation/urlsessiondatatask&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I &lt;strong&gt;had&lt;/strong&gt; all of these in tabs because each one weighted individually is just as important as the previous one ;-)&lt;/p&gt;

&lt;p&gt;See you tomorrow.&lt;/p&gt;

&lt;p&gt;PS: Just so we are totally transparent, it took me until &lt;code class=&quot;highlighter-rouge&quot;&gt;2018-10-05 01:45:36&lt;/code&gt; … I’d explain why but&lt;/p&gt;</content><author><name></name></author><category term="software engineering" /><category term="swift" /><category term="swift package manager" /><category term="spm" /><category term="links" /><category term="challenge" /><summary type="html">Instead of spending time on programming challenging grinding for the interviews, I wanted to study swift package manager (SPM)</summary></entry><entry><title type="html">Will end-user applications ever be truly programmable?</title><link href="https://getaclue.github.io/blog/will-end-user-applications-ever-be-truly-programmable" rel="alternate" type="text/html" title="Will end-user applications ever be truly programmable?" /><published>2018-10-03T00:00:00-04:00</published><updated>2018-10-03T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/will-end-user-applications-ever-be-truly-programmable</id><content type="html" xml:base="https://getaclue.github.io/blog/will-end-user-applications-ever-be-truly-programmable">&lt;p&gt;Over the past year, I’ve noticed a trend that I’m starting to accummulate a running list of blogs, articles, and people that I find interesting. A list that I curate and maintain manually — a practice that everyone prior to SAAS explosion used to be intimately familiar with: using bookmarks.&lt;/p&gt;

&lt;p&gt;Why am I going back to doing this? I jumped in just like everyone else on the social media train that started moving in the early 2000s.&lt;/p&gt;

&lt;p&gt;As this train moved further away from the station, I noticed that I changed the way I interacted with information. Instead of saving things locally on my computer, I would off-load it to the cloud. At first, it made it very convenient for myself: I wouldn’t need to worry about hard-drive crashes or lost information. Even then — a failing hard-drive almost never crossed my mind during my day-to-day uses even if I was mindful of its risk. I finally knew where I could find anything. No more plugging in different hard drives and searching for my things. (and storage capacities at prices that I could not afford previously).&lt;/p&gt;

&lt;p&gt;Eventually, the technology improved and added things I did not know I was missing. Specifically — the sharing and collaborating features. The cloud ecosystems enabled the possibility of sharing interesting information with others. Most importantly, it allowed for asynchronous (and real-time) working experience with others and paved the remote work movement. In other words, saving things locally was a thing of the past. Archaic. Everything. Always. Stayed somewhere else.&lt;/p&gt;

&lt;p&gt;Problems? What problems? All of our problems went away we were told by marketers. Previously, if I shared information with someone there were many variables involved in the process: from compressing, to transfer, to uptime, and so on. Now, there were no more problems. If you cannot get my shared documents then something is wrong on your end; with the way you are doing things. Run into a problem? One could simply point people to most common problems list, or a faqs, or a helpful video and thus reduce the amount of time spent on such stressors.&lt;/p&gt;

&lt;p&gt;So what happened? Too much comfort and reliance in the spoon feeding. The non-stop flow from the infinite social media feed algorithms got into my daily routines. Why should I be looking for information? I’ll let that be fed to me based on the way I interact with things. I stopped being actively involved in this search. I relied too much on the feed algorithms. I got lazy and falsely expected good quality news to flow to me.&lt;/p&gt;

&lt;p&gt;… and it worked. But boy did this approach ever backfire on me.&lt;/p&gt;

&lt;p&gt;What I did not consider is the historical perspective. During my regular day-to-day usage, the social feed works well once you jump into that water. However, if you are like me and like to reference things at random times, then this approach starts to break. The infinite feed is not really productive especially if there is no predictable order to it. Moreover, you could run into an issue of not finding things in the future. This is especially prevelent if you are an early adopter.&lt;/p&gt;

&lt;p&gt;All of the unicorns, if the business is still around, experienced their fair share of messing with user’s data unintentionally. Be it permission to the data access, persistence of the data or lack of it, recovery of the data, pricing structures, and so on.&lt;/p&gt;

&lt;p&gt;How can a random user be confident in a random service? Will the data be available to the user in the future? Will you be able to access the data? How much access will you have? For how long? How do you export the data? Can you? Should you? How do you share the knowledge with a friend? Someone who is outside of your wall? Will there be a good relationship between the business and the user? Does the relationship change if you pay?&lt;/p&gt;

&lt;p&gt;I am questioning if it is fair of us as consumers to be asking things that we want to be asking of technology giants. I am also questioning if we have any good examples of great businesses left in software? Examples that a random person on the street may be familiar with and not the outliers.&lt;/p&gt;

&lt;p&gt;Ok… now that you have some background I will move on to the why I even started typing this piece.&lt;/p&gt;

&lt;p&gt;Imagine me a few days ago when I stumbled upon a random website. I started reading the content and saw that it was written by &lt;a href=&quot;https://patrickcollison.com/&quot;&gt;Patrick Collison&lt;/a&gt; — the one from &lt;a href=&quot;Stripe.com&quot;&gt;Stripe.com&lt;/a&gt;. He brought up a &lt;a href=&quot;https://patrickcollison.com/questions&quot;&gt;few interesting points&lt;/a&gt; that I did not consider regarding our (user’s) interaction with software. He said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Will end-user applications ever be truly programmable? If so, how?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Emacs, Smalltalk, Genera, and VBA embody a vision of malleable end-user computing: if the application doesn’t do what you want, it’s easy to tweak or augment it to suit your purposes. &lt;strong&gt;Today, however, end-user software increasingly operates behind bulletproof glass&lt;/strong&gt;. This is especially true in the growth areas: mobile and web apps. Furthermore, not only is it getting &lt;strong&gt;harder to manipulate&lt;/strong&gt; the application logic itself, but it’s also becoming &lt;strong&gt;harder to directly manipulate&lt;/strong&gt; your data. With Visual Basic, you can readily write a quick script to calculate some calendar analytics with Outlook. &lt;strong&gt;To do the same with Google Calendar is a very laborious chore&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;End-user computing is becoming less a bicycle and &lt;strong&gt;more a monorail&lt;/strong&gt; for the mind.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;As a consequence, &lt;strong&gt;we need ever more domain-specific software&lt;/strong&gt;. Rather than use universal tools for handling charts and for manipulating data, we tend to use separate analytics packages for every conceivable application. This is not all bad. Domain-specific tools can maximize ease-of-use and help amortize the cost of complex, specialized functionality. Sublime’s built-in ⌘-T works better than every third-party Emacs package. Still, despite these benefits, the popularity of macros and browser plugins strongly suggest that &lt;strong&gt;users are smart and want more control&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Should we just give up on our earlier visions of empowered users or is a better equilibrium possible?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The quote above (with my own highlights) was retrieved on October 3, 2018.&lt;/p&gt;

&lt;p&gt;Very interesting perspective Patrick. A view that I am glad you shared and definitely will make me think in the future. More specifically, I did not see what kind of doors something like &lt;a href=&quot;https://en.wikipedia.org/wiki/Visual_Basic_for_Applications&quot;&gt;VBA&lt;/a&gt; opened for everyone. With VBA, a user has the ability to play while avoiding 3rd party reliance. This was probably huge when it came about to the customers.&lt;/p&gt;

&lt;p&gt;I’m afraid to admit that I used to think: why on earth would you use VBA in 2016? 2017? 2018? Well, if you are stuck and have nothing else at your disposal, it surely looks like a really good tool to use.&lt;/p&gt;

&lt;p&gt;You have to remember and put yourself in that context. A context of a typical worker that is constrained by an administrator. In such a situation, usually, everything is turned off by default (because risk mitigation strategy). This way, if you need something to be turned on or installed then then need to submit a service request. You basically need to cry for help. Moreover, things like cost, licensing, needs, and wants come into play during such a request. These things require justification. Because, business after-all.&lt;/p&gt;

&lt;p&gt;If you are in such a unique position and you are constrained, then you may need to get creative. How do you solve such a problem? Create your own shortcuts. See a repetitive tasks? Automate it. Boring task? Automate it.&lt;/p&gt;

&lt;p&gt;So, how can you do this automation? Lots of creative approaches, say&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;buy an automaton thing or get creative with something like &lt;a href=&quot;https://zapier.com/&quot;&gt;Zapier&lt;/a&gt; or &lt;a href=&quot;https://ifttt.com/&quot;&gt;IFTTT&lt;/a&gt; products&lt;/li&gt;
  &lt;li&gt;ask coworker to see what they would do&lt;/li&gt;
  &lt;li&gt;ask your boss and see what they say&lt;/li&gt;
  &lt;li&gt;research and see what tools are available to you (at your level) or your boss&lt;/li&gt;
  &lt;li&gt;open up a browser and the developer’s console -&amp;gt; JavaScript to the rescue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OR you could simply&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;learn &amp;amp; use VBA (that is already installed on your environment)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Problem solved!&lt;/p&gt;

&lt;p&gt;If you take a step back, suppose you go back four years ago to 2014, then I am not sure if I would have even written this article. You have to remember that technology moves fast. But I can definitely assure you that &lt;code class=&quot;highlighter-rouge&quot;&gt;open up a browser and the developer's console -&amp;gt; JavaScript to the rescue&lt;/code&gt; definitely would not have been up there as a solution.&lt;/p&gt;

&lt;p&gt;JavaScript wasn’t where it is now. If your only option was Internet Explorer then you definitely did not enjoy JavaScript. There was a lot of lapses (language features and browser support). I definitely never imagined seeing something like &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt; in my browser’s console. Heck, your development tools that are packed in your web browser weren’t where they are now in October of 2018. I am not even talking about other significant improvements done over the years.&lt;/p&gt;

&lt;p&gt;So, my take away was an interesting one. I can understand and appreciate the importance of being creative within software constraints a little bit more. I can open up my Excel 2013 and create a macro to do pretty much what I want it to do. It just works and I can be a little bit more productive. If I wanted to do something similar with Google Sheets hypothetically, I would probably have to sign up for a new service and transfer some of my data along the way. Thus, perpetuating the moving of your data throughout the Internet while leaving little crumbs along the way. Is it bad? Is it good? Are these the right questions? Depends on model and the simulation I suppose ;-)&lt;/p&gt;

&lt;p&gt;But I am also glad to see impactful people asking important questions.&lt;/p&gt;

&lt;p&gt;See you tomorrow.&lt;/p&gt;</content><author><name></name></author><category term="software engineering" /><summary type="html">Why am I going back to doing this? I boarded this social media train, in the early 2000s, just like everyone else.</summary></entry><entry><title type="html">October 2018 Challenge</title><link href="https://getaclue.github.io/blog/october-2018-challenge" rel="alternate" type="text/html" title="October 2018 Challenge" /><published>2018-10-02T00:00:00-04:00</published><updated>2018-10-02T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/october-2018-challenge</id><content type="html" xml:base="https://getaclue.github.io/blog/october-2018-challenge">&lt;p&gt;So, I’ve decided to do a few challenges for the month of October:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;do at least 1 problem on leetcode per day&lt;/li&gt;
  &lt;li&gt;write and publish 1 thing per day&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A few minutes ago, I was having a blast while fighting with the following maintenance that I am undergoing for &lt;a href=&quot;https://dailyvibes.ca&quot;&gt;daily vibes&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-10-02/xcode-battles.png&quot; alt=&quot;Xcode decided to not play along&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While customers do not care about such background things, I am beginning to see what people mean about upgrade headaches. And, thus, I stopped for today. No more wasting time on lower priority things. I then proceeded to write instead. I wanted to say two things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I am trying really hard to stay committed to the problem solving challenge. Not going to lie right now — not looking forward to it right now but I am looking forward to looking back at this time and laughing about it.&lt;/li&gt;
  &lt;li&gt;Writing something every day and then publishing it is, also, not going to be easy. It is an experiment for me that I hope you enjoy whenever you read this. Perhaps, you will see what improvements can occur through deliberate practice in just a few days.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;See you tomorrow.&lt;/p&gt;</content><author><name></name></author><category term="software engineering" /><category term="challenge" /><summary type="html">See you tomorrow.</summary></entry><entry><title type="html">On Discrete Mathematics For Computer Science</title><link href="https://getaclue.github.io/blog/on-discrete-mathematics-for-computer-science" rel="alternate" type="text/html" title="On Discrete Mathematics For Computer Science" /><published>2018-10-01T00:00:00-04:00</published><updated>2018-10-01T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/on-discrete-mathematics-for-computer-science</id><content type="html" xml:base="https://getaclue.github.io/blog/on-discrete-mathematics-for-computer-science">&lt;p&gt;I just ran into &lt;a href=&quot;http://condor.depaul.edu/sepp/ICME-13.Epp.pdf&quot;&gt;“Discrete Mathematics For Computer Science”&lt;/a&gt; by Susanna S. Epp (13th International Congress on Mathematical Education Hamburg, 24-31 July 2016). The piece resonated with me and I decided to note some reflections from my own experience down.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I added my own emphasis to the quotes below.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The material in discrete structures is pervasive in the areas of data structures and algorithms but &lt;strong&gt;appears elsewhere&lt;/strong&gt; in computer science as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This statement resonates very well with me. During my education, there was a big emphasis on data structures and importance of maths in &lt;em&gt;that&lt;/em&gt; field. However, there was almost no time spent on the &lt;em&gt;appears elsewhere&lt;/em&gt; part of my studies. This left me frustrated lots of times primarily because I went into software engineering to learn about the application of theory.&lt;/p&gt;

&lt;p&gt;It is also how I know about Susanna S. Epp and her book &lt;em&gt;Discrete Mathematics with Applications by Susanna S. Epp&lt;/em&gt;. When I found my education exposure was lacking, I started to search for different strategies to learn difficult material. It turns out, if you add a little bit of effort, then you can find an author in your field of interest that can help you learn this challenging material. An author that writes in a way that you can understand.&lt;/p&gt;

&lt;p&gt;Unfortunately, it is one thing that nobody talks about when you are having a difficult time understanding. The fact that if you are having a hard time studying, then a different solution or approach is needed for you&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;if you know that other approaches exist&lt;/li&gt;
  &lt;li&gt;if you look hard for it&lt;/li&gt;
  &lt;li&gt;if you take an initiative to self-study&lt;/li&gt;
  &lt;li&gt;and self-research.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;[…] an ability to create and understand a proof — either a formal symbolic proof or a less formal but still mathematically rigorous argument—is important in virtually every area of computer science, including (to name just a few) formal specification, verification, databases, and cryptography.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;[g]raph theory concepts are used in networks, operating systems, and compilers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Set theory concepts are used in software engineering and in databases.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Probability theory is used in intelligent systems, networking, and a number of computing applications.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And while I do understand the reference points and examples — I only do so because I went through the system. Looking backwards, when I was learning at the beginning, I recall a big emphasis on data structures and graphs. However, there was no justification besides rote memorization and &lt;strong&gt;needing it for this degree&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This paper explores three reasons for the problem. One is that there has been a reduced emphasis on mathematical proof in the secondary mathematics curriculum.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anecdotally that was true in my experience. This subject matter was never fully conveyed to me - how proofs form the building blocks.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A study of teacher attitudes by Knuth (2002) indicated that the teachers “viewed proof as appropriate for the mathematics education of a minority of students” and that they saw proof “as a &lt;strong&gt;topic of study&lt;/strong&gt; rather than as a &lt;strong&gt;tool for communicating and studying mathematics&lt;/strong&gt;.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yeap… ding ding ding. That’s how it was conveyed to me in Canadian school system as well.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A second is that the &lt;strong&gt;ways certain words and phrases&lt;/strong&gt; are interpreted &lt;strong&gt;in ordinary speech&lt;/strong&gt; often differ from the ways they must be interpreted in formal, deductive reasoning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I cannot tell you how much I struggled with this. The cognitive collusion between ordinary speech and formal reasoning. It is tough to get your head around the complicated subject matter. It really is.&lt;/p&gt;

&lt;p&gt;And these things follow you if you do not grasp them when first learning. As someone who had no English vocabulary, I was studying the new language in parallel as I was getting my education foundation and going through the education system. Not only does it make studying these concepts confusing, it also makes the entire field of Maths as some type of mountain that you cannot climb.&lt;/p&gt;

&lt;p&gt;I spent a lot of my time memorizing content without understanding. While this approach works to some degree, it almost always fails as you get higher up the knowledge ladder.&lt;/p&gt;

&lt;p&gt;What I did not realize, at the time that I was struggling, was that the road blocks should have signaled to me that I had foundational issues. Instead, I plowed forward without having the full picture.&lt;/p&gt;

&lt;p&gt;I understand this now and it is part of the reason why I read up on things like this in my free time.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;One of their tasks as students is to learn how to extract the standard interpretation from what is said and written. One of the tasks of instructors is to teach them how to do that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;100% did not experience this. In all of my experience so far the instructors believed in rote replication via writing. While this may work for some learning styles, it really did not work for me.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;One example is that in everyday speech if-then is frequently interpreted as if-and-only-if.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Did I find this confusing? Check.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Only-if is also routinely interpreted as if-and-only-if.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Did I find this confusing? Check.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In propositional logic the negation of “if A then B” is the conjunction “A and not B,” …&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Did I find this confusing? Check.&lt;/p&gt;

&lt;p&gt;It is a bit hard to reflect on this now because I am much more familiar with this subject. But I will try to step back and play around with my thoughts. The author mentions that students seem to reply &lt;code class=&quot;highlighter-rouge&quot;&gt;if A then not B&lt;/code&gt; as the common solution to the negation.&lt;/p&gt;

&lt;p&gt;While I can justify that response in my head, my brain wants to say &lt;code class=&quot;highlighter-rouge&quot;&gt;if not A then not B&lt;/code&gt; but it definitely doesn’t think &lt;code class=&quot;highlighter-rouge&quot;&gt;not A or B&lt;/code&gt; nor &lt;code class=&quot;highlighter-rouge&quot;&gt;not A and B&lt;/code&gt;. Sure, I know the theory and I know about truth tables. And, if I force myself then I can definitely come up to the solution.&lt;/p&gt;

&lt;p&gt;However, what I am saying is that it is still challenging to think about these things when you have mental clashes with your everyday speech.&lt;/p&gt;

&lt;p&gt;See:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For instance, a natural response to “If John comes, then the party will be a disaster” is “Don’t worry. If John comes, then the party will not be a disaster. It will be fine.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This takes the language issue a bit further:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;According to the rules of predicate logic, when a statement contains &lt;strong&gt;two different quantifiers&lt;/strong&gt;, they should be interpreted in &lt;strong&gt;left-right order&lt;/strong&gt;. However in ordinary language a statement with both for-all and there-is is typically interpreted in &lt;strong&gt;whatever way makes the most common sense&lt;/strong&gt;. Linguists call this “scope ambiguity.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;See:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For example, the most natural way to interpret the sentence, “There is a lid for every pot” is as “For every pot there is a lid” not as “There is one single lid that will be fit every pot.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Think about this.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A third is the difficulties students experience in understanding and using statements involving variables, both in connection with predicate logic and in interpreting certain kinds of mathematical phrases.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Very true but to me, this stems from issue created in #2 regarding language.&lt;/p&gt;

&lt;p&gt;I liked the following examples provided in the piece:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What we say — What we mean
    &lt;ul&gt;
      &lt;li&gt;the value of x — the quantity that is put in place of
x&lt;/li&gt;
      &lt;li&gt;as the value of x increases — as larger and larger numbers are put in place of x&lt;/li&gt;
      &lt;li&gt;As the value of x increases, the value of y increases. — If larger and larger numbers are put in place of x, the corresponding numbers that are put in place of y become larger and larger
.&lt;/li&gt;
      &lt;li&gt;where x is any real number — for all possible substitutions of real numbers in place of x&lt;/li&gt;
      &lt;li&gt;Let n be any even number — Imagine substituting an integer in place of n but &lt;strong&gt;do not assume anything about its value&lt;/strong&gt; except that it is an even integer
.&lt;/li&gt;
      &lt;li&gt;By definition of even, &lt;code class=&quot;highlighter-rouge&quot;&gt;n = 2k&lt;/code&gt; for some integer &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; — By definition of even, there is an integer we can substitude in place of &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; so that the equation &lt;code class=&quot;highlighter-rouge&quot;&gt;n = 2k&lt;/code&gt; will be true. (In fact, there is only one such integer; its value is &lt;code class=&quot;highlighter-rouge&quot;&gt;n/2&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;the function &lt;code class=&quot;highlighter-rouge&quot;&gt;x^2&lt;/code&gt; — the function that relates each real number to the square of that number. In other words, for each possible substitution of a real number in place of &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;, the function corresponds to the square of that number.&lt;/li&gt;
      &lt;li&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; is some real number that satisfies the given property — There is a real number that will make the given property true if we substitude it in place of x.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;While I respect the author and the work she does, it appears that math education is a loosing battle. I skimmed through author’s article from 1987 (The Logic of Teaching Calculus. In Toward a Lean and Lively Calculus: Report of the Conference Workshop to Develop Curriculum and Teaching Methods for Calculus at the College Level. Ronald G. Douglas, Ed. Washington, D.C.: Mathematical Association of America, 1987, 41-59.) where she outlined similar concerns around logic (only that time it was in the context of calculus).&lt;/p&gt;

&lt;p&gt;It has been more than 30 years and it appears that new students are continuing to struggle with maths. Anecdotally, I hear concerned systems and parents pushing for programming skills while pushing away core maths. If you found math challenging or confusing I encourage you not to give up. You can study it on your own.&lt;/p&gt;

&lt;p&gt;Start your studies wherever you got confused. There are tests available that can help you narrow it down. Start from grade 1 if you want to. Who is going to judge? Open up khan academy and go to town. Discover the beauty and study on your own time… I did (and I still am).&lt;/p&gt;

&lt;p&gt;If it wasn’t for Khan Academy, self-studying, youtube, and the people of the internet in general — I am not sure if I would be where I am.&lt;/p&gt;</content><author><name></name></author><category term="software engineering" /><category term="maths" /><summary type="html">If you found math challenging or confusing I encourage you not to give up. You can study it on your own.</summary></entry><entry><title type="html">More frequent updates</title><link href="https://getaclue.github.io/blog/more-frequent-updates" rel="alternate" type="text/html" title="More frequent updates" /><published>2018-09-29T00:00:00-04:00</published><updated>2018-09-29T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/more-frequent-updates</id><content type="html" xml:base="https://getaclue.github.io/blog/more-frequent-updates">&lt;p&gt;Those of you that know me personally, know that I do a lot of little experiments and I like to reflect. I believe in engineering and science principles. They are at my core and drive me forward.&lt;/p&gt;

&lt;p&gt;Unfortunately, I feel like I am not doing a good job in reflecting and sharing that with you. What happens usually is that I open up a blank canvas, such as this one, and just start writing. Usually I have a topic or a direction that motivates me to write. However, I do not consider if I will publish or delete the content at the time of writing it.&lt;/p&gt;

&lt;p&gt;This is what I mean by a blank canvas in September 2018:
&lt;img src=&quot;/assets/images/2018-09-28/Screen-Shot-2018-09-29-at-12.12.33.png&quot; alt=&quot;Blank canvas&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As a result, I have a lot of written content spread out across various computers, domains, and publications. A lot of this content is not published and, if taken out of context, may seem like a waste of my time. Personally, I find it very difficult to hit that publish button for many reasons.&lt;/p&gt;

&lt;p&gt;To me, writing is cathartic in a sense — the single purpose is to remove the content from my head. When the ideas are out of my head and on a canvas then I can play with them. In my head there is chaos, so I like to consolidate my ideas and to make sense of them. To tease out my views and opinions (and to correct them).&lt;/p&gt;

&lt;p&gt;If you take this into consideration, then perhaps you can see why some of my pieces don’t get my approval and thus never see the light. However, the longer I live on this earth, the more I wish I didn’t hold back and just publish (whether or not it is finished). So, I decided to actively work on this.&lt;/p&gt;

&lt;p&gt;One of my goals for 2018 was to publish more frequent written updates. The intention was not only to improve the quality of my written content but also to documenting a process.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It is the end of September. Month #9 is almost done. So how have I been doing?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On the whole, I have been doing way better than any of my previous years. If you take a look at this year alone, I have published 11 pieces of work so far. Some of them even required a lot of additional work. Gasp!!! One thing for sure — I have been staying consistent. Whatever that means to me.&lt;/p&gt;

&lt;p&gt;If I take a look at it this way, then my progress is happening. I am growing and developing. However, during my day-to-day thinking it feels more negative. I feel like I could be doing better in this area. I still find myself falling into the trap of not publishing. Reflecting on this progress definitely helps to stay on track.&lt;/p&gt;

&lt;p&gt;So, I think I am doing OK even if it doesn’t feel like that. I give myself the permission to make mistakes, publish more frequent and unfinished work; and continue this journey that I started.&lt;/p&gt;

&lt;h2 id=&quot;what-happened-since-the-last-post&quot;&gt;What happened since the last &lt;a href=&quot;/blog/i-have-to-come-clean-about-my-project&quot;&gt;post&lt;/a&gt;?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;in June/July/August, I finished the backend &amp;amp; frontend MVP for dailyvibes
    &lt;ul&gt;
      &lt;li&gt;the said backend and frontend are not live yet to anyone but you may see some things &lt;a href=&quot;https://github.com/dailyvibes&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;PS, as an aside — I am considering migrating away from github to self-hosted for all of my work&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;in July, worked on &lt;a href=&quot;https://screenhole.net/&quot;&gt;screenhole&lt;/a&gt; and created an MVP for a Mac OS screen recorder functionality. That was a fun experiment that you can view at &lt;a href=&quot;https://screenhole.net/getaclue/~g8U2vv&quot;&gt;https://screenhole.net/getaclue/~g8U2vv&lt;/a&gt; Unfortunately that is not a public feature and is stuck in alpha/beta stage until further notice.&lt;/li&gt;
  &lt;li&gt;in July/August, worked on &lt;a href=&quot;https://keyframes.net/&quot;&gt;keyframes&lt;/a&gt; native Mac app. Was a bit of work but looks nice in my opinion. This work is in &lt;a href=&quot;https://keyframes.net/snapper/beta&quot;&gt;beta&lt;/a&gt; and is available for download.&lt;/li&gt;
  &lt;li&gt;in August, launched our &lt;a href=&quot;https://cspray.ca/&quot;&gt;physical product&lt;/a&gt; at the &lt;a href=&quot;https://theex.com/&quot;&gt;Canadian National Exhibition&lt;/a&gt;. That was intense. Will talk about this more at a later time ;-) but lets just say we are continuing working on this project. This was a FIRST for us and also a BIG deal!!!
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Attendance: 1.54 million (2016)&lt;/code&gt; — may hint to you at why. And we made sure to talk to almost everyone that passed by us. I say almost because it was just the two of us.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;in September, started to work on news article parser for &lt;a href=&quot;https://elderoost.com/&quot;&gt;elderoost&lt;/a&gt;. One of the current challenges is keeping up to news. I physically read all of the articles manually and filter them manually. This honestly takes a lot of time. If you check the website the latest article was added &lt;code class=&quot;highlighter-rouge&quot;&gt;5 months ago&lt;/code&gt;. I have all of the articles since then I just haven’t processed them yet.
    &lt;ul&gt;
      &lt;li&gt;current working approach:
        &lt;ul&gt;
          &lt;li&gt;get news article link&lt;/li&gt;
          &lt;li&gt;go to the link&lt;/li&gt;
          &lt;li&gt;grab the URL, title, headline, author, date of publication, and the content
            &lt;ul&gt;
              &lt;li&gt;I found a script that helps with grabbing all of this (similar to how some browsers allow you to have a read an html page in plain text if you click a button)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;put this stuff into postgres db&lt;/li&gt;
          &lt;li&gt;index title and content using elasticsearch&lt;/li&gt;
          &lt;li&gt;for each residence search against this text&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;unfortunately it is not done as I cannot narrow down some edge cases.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;and-what-am-i-up-to-now&quot;&gt;and what am I up to now?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;job search
    &lt;ul&gt;
      &lt;li&gt;After 2 years and some, I think it is time as there aren’t any new opportunities for growth as a software engineer where I am&lt;/li&gt;
      &lt;li&gt;The work moved to a new physical location that is more challenging to commute to&lt;/li&gt;
      &lt;li&gt;My school debt is causing me a lot of stress and anxiety… so I’d like to pay this off faster.&lt;/li&gt;
      &lt;li&gt;I am not being paid what I know I could be for someone with my needed skills
        &lt;ul&gt;
          &lt;li&gt;I stayed because of the team but that recently got dissolved&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;cspray&lt;/li&gt;
  &lt;li&gt;dailyvibes
    &lt;ul&gt;
      &lt;li&gt;add user auth functionality on ios
        &lt;ul&gt;
          &lt;li&gt;make user auth functionality work between ios and server&lt;/li&gt;
          &lt;li&gt;make a sync mechanism between ios and server (probably manual for now and then automate)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;modify the way you share links within iOS (add a new area so it is easier to share)
        &lt;ul&gt;
          &lt;li&gt;share these links from iOS to server (after the user stuff is linked up)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;provision a server on DO or Linode
        &lt;ul&gt;
          &lt;li&gt;glue the backend &amp;amp; frontend on this server&lt;/li&gt;
          &lt;li&gt;glue the server to dailyvibes domain&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;elderoost
    &lt;ul&gt;
      &lt;li&gt;finish news article parser&lt;/li&gt;
      &lt;li&gt;add a notifyer after this is done to manually review&lt;/li&gt;
      &lt;li&gt;figure out monetization&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… in that order I think.&lt;/p&gt;

&lt;p&gt;Now, I’m going to spend the next little while grinding cracking the coding interview bible and all of the typical hackerrank websites. It is a bit unfortunate that I need to put a pause on the side projects to do this. But it is what it is. (Especially if you want to work for the typical Fortune N company.)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;And for those of you that finished reading this, here is some behind the scenes context to this article. It is an example of a written piece that I ended up &lt;a href=&quot;/blog/would-you-let-your-mother-use-your-software&quot;&gt;publishing&lt;/a&gt;. It started off as a &lt;a href=&quot;http://www.hemingwayapp.com/&quot;&gt;Hemingway app&lt;/a&gt; draft and then, eventually, I approved and transformed it into an article.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-09-28/Screen-Shot-2018-09-29-at-11.35.50.png&quot; alt=&quot;Sample written piece that I ended up sharing&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="software engineering" /><category term="doubt" /><summary type="html">So, I think I am doing OK even if it doesn't feel like that.</summary></entry><entry><title type="html">I have to come clean about my project</title><link href="https://getaclue.github.io/blog/i-have-to-come-clean-about-my-project" rel="alternate" type="text/html" title="I have to come clean about my project" /><published>2018-06-10T00:00:00-04:00</published><updated>2018-06-10T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/i-have-to-come-clean-about-my-project</id><content type="html" xml:base="https://getaclue.github.io/blog/i-have-to-come-clean-about-my-project">&lt;p&gt;I have something to tell you and come clean about. I haven’t touched my beloved dailyvibes code base since April. And if I am being completely honest, I kind of lost steam in March. (To give you some context, I started thinking about the project in October and working on it last November. Since November I tried to ship something every 2 weeks.)&lt;/p&gt;

&lt;p&gt;Everything was fine until about March. In March, I felt that I did not like where I was going, I was having a bad time, and I was losing project’s direction. I even had thoughts of abandoning it.&lt;/p&gt;

&lt;p&gt;I also knew that my app was stable enough for people to use. Thus, if I was about to abandon my work then at least people would not lose their data. These thoughts allowed me to slow down and to reflect. Afterall, I still care about the project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d.pr/i/klf5jH+&quot; alt=&quot;you're going to have a bad time image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Whenever I start thinking this way about a project, I become aware that it is a good time to step back and reflect. In other words, it is a good time to see if my time is worth investing into a project.&lt;/p&gt;

&lt;p&gt;To start, I wanted to figure out what was causing me to feel this way. I narrowed it down to the following three issues:&lt;/p&gt;

&lt;h2 id=&quot;1-i-was-facing-technical-issues&quot;&gt;1. I was facing technical issues.&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://d.pr/i/ai0zYr+&quot; alt=&quot;subject to technical issues - free image from https://pixabay.com/en/problem-technical-issues-technology-1951987/&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I work solo, I did not want to spend my limited time on things that do not move the project forward (in the users eyes). But, it got to a point where I needed to &lt;a href=&quot;https://www.briantracy.com/blog/time-management/the-truth-about-frogs/&quot;&gt;eat that frog&lt;/a&gt;. It is one of the challenges that comes with indie work. You wear many hats. You are playing the role of a product manager and have to decide on what to work on. Sometimes you have to do the work that you do not want to.&lt;/p&gt;

&lt;h2 id=&quot;2-i-was-not-happy-with-the-direction-of-the-project&quot;&gt;2. I was not happy with the direction of the project.&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://d.pr/i/DMndPx+&quot; alt=&quot;lost found searching - image from https://pixabay.com/en/lost-found-lost-and-found-searching-1605501/&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At the beginning of the project, I needed to do some market research. I needed to check if this project was worth my interest and time. How did I do my market research? Well, it was very simple. I downloaded all the productivity / todo apps from the Apple App Store and I played with each one of them. I noted down ideas that I liked and things that I did not like. But, by doing that, my phone looks like this now:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://d.pr/v/CtydOz&quot;&gt;&lt;img src=&quot;https://d.pr/i/b8PU7m+&quot; alt=&quot;my ios screen&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After playing with each app, I’ve come to realize that most of the apps do the same thing.&lt;/p&gt;

&lt;p&gt;What this means to the users is that they have a lot of choice in this saturated category of productivity. In otherwords, they can switch from my product much easier.&lt;/p&gt;

&lt;p&gt;What this means to me is that I don’t need to stress on competing. I was aligning dailyvibes with other similar apps. This process made me bored and stopped using the app. Dailyvibes started because I was not happy of the solutions. Instead I will focus on building features that will be useful to the end user and to me. I will focus on the product and its quality.&lt;/p&gt;

&lt;p&gt;So I took a step back and recorded the actions that I do every day. I interact with the following data structures: tasks to complete today, notes/text snippets, links/bookmarks, gifs / images and photos. One thing that kind of doesn’t fit is positive thoughts / quotes. I need to think some on this.&lt;/p&gt;

&lt;p&gt;So I will work on integrating these things into dailyvibes and thus forcing me to dogfood my own app. What will make all these things work together is some kind of linking mechanism. I will definitely polish this as time moves on.&lt;/p&gt;

&lt;p&gt;After all, users have so much choice.&lt;/p&gt;

&lt;h2 id=&quot;3-i-did-not-know-what-direction-apple-will-take-mac-os-apps-in&quot;&gt;3. I did not know what direction Apple will take Mac OS apps in.&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://d.pr/i/LE7TsI+&quot; alt=&quot;marzipan rumours&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next biggest feature for dailyvibes is to create a server component. Which will be then followed by a syncing mechanism of some sort between the server and iOS app. Both of these components, would position me well to create either a a desktop companion app or a web app. I chose to wait until June to make this decision because of WWDC.&lt;/p&gt;

&lt;p&gt;I could not decide if I wanted to leverage the iCloud ecosystem and have apple do all the legwork or me. I’ve investigated both options. I decided to roll out my own for three reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I know how,&lt;/li&gt;
  &lt;li&gt;I want to practice for my personal project, and&lt;/li&gt;
  &lt;li&gt;I want to have control over my data.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I hope that these decisions will also benefit the users.&lt;/p&gt;

&lt;p&gt;I also could not decide if I wanted to spend time on a native Mac desktop app or on a web app. I am familiar with web but I am very new to the Mac. I investigated both options. I am deciding, at least for now, to focus on the web app component because I am more familiar with that. Plus, Apple admitted that there will be changes to Mac OS next year. I’ll revisit native Mac app next year.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;It is nice to step back and reflect on how far you’ve come with a project. It is good to be mindful. Albeit, I will be first to admit that it is challenging to talk about your project when it is not going as you expect. I am, once again excited, to keep working on the project and I have a better vision moving forward.&lt;/p&gt;

&lt;p&gt;This is a nice feeling when you are happy with your decisions. Also, the organic discovery isn’t that bad either:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d.pr/i/MLstRV+&quot; alt=&quot;Q1 results&quot; /&gt;
&lt;img src=&quot;https://d.pr/i/dHUliO+&quot; alt=&quot;Q2 results&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you’re making something, you have to be the first to believe in success of your thing. Do one thing every day that moves the project forward. Everything else will [hopefully] work itself out.&lt;/p&gt;

&lt;p&gt;Thanks for reading and until next time,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;

&lt;p&gt;PS: You can download Daily Vibes by searching using your favorite iOS device on &lt;a href=&quot;https://geo.itunes.apple.com/app/id1332324033&quot;&gt;Apple App Store&lt;/a&gt; or from &lt;a href=&quot;https://dailyvibes.ca&quot;&gt;https://dailyvibes.ca&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="software development" /><category term="software engineering" /><category term="doubt" /><category term="mindful" /><summary type="html">I have something to tell you...</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn-pro.dprcdn.net/files/acc_603419/AoFNPd" /></entry><entry><title type="html">Would you let your mother use your software?</title><link href="https://getaclue.github.io/blog/would-you-let-your-mother-use-your-software" rel="alternate" type="text/html" title="Would you let your mother use your software?" /><published>2018-05-11T00:00:00-04:00</published><updated>2018-05-11T00:00:00-04:00</updated><id>https://getaclue.github.io/blog/would-you-let-your-mother-use-your-software</id><content type="html" xml:base="https://getaclue.github.io/blog/would-you-let-your-mother-use-your-software">&lt;p&gt;Would you let your mother use your software?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-pro.dprcdn.net/files/acc_603419/V8kt2K&quot; alt=&quot;Oh and I am not trying to single anyone out in this photo btw&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How about your father? sister? brother? wife? husband? fiancé? grandparents? neighbour?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I can immediate hear some of you say:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;But Alex … you would say …&lt;/li&gt;
  &lt;li&gt;… they would never &lt;em&gt;use&lt;/em&gt; my software… they are not my &lt;em&gt;target audience&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Or… I would teach them how to use my software properly.&lt;/li&gt;
  &lt;li&gt;Or… I would never let them use it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To &lt;em&gt;you&lt;/em&gt;, my dear friend, I would ask that you play along with me in this exercise.&lt;/p&gt;

&lt;p&gt;Suppose that the use of your software became mandatory. Suppose your friend or family member had no help or training from you. Suppose they were that user number #1110101 that you did not want to deal with. Take your pick.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Are you following along?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you are following, at what I am trying to say here, then I hope you can answer yes to my original question with some degree of confidence.&lt;/p&gt;

&lt;p&gt;And no… you cannot use the typical engineering answer of “it depends”. Sorry, I want a binary response here: yes or no.&lt;/p&gt;

&lt;p&gt;So, if your answer is a no then I hope that you might start thinking about these important issues. For example, you could start thinking about why are you leaning towards no? Perhaps, what can you do today to increase your level of confidence? Because you can.&lt;/p&gt;

&lt;p&gt;Do you call yourself a scientist or an engineer? Do you have some variation of this title? Are you proud to call yourself that? Does it define who you are on a day-to-day basis? If so then you must think about ethics. It is your duty.&lt;/p&gt;

&lt;p&gt;But maybe this belief is naive? Maybe this is not how it works in the real world? Maybe being associated with those things is not enough for such heavy consideration? Maybe we should leave ethics to someone else? We make software to solve some problem and that’s that.&lt;/p&gt;

&lt;p&gt;Too often I see the answer that it is not applicable to me or my work. Too often I see ambivalence and lack of professional care. To me, this cannot be the winning formula moving forward.&lt;/p&gt;

&lt;p&gt;If you’ve been following software development for the past few years, then you’ve noticed a certain trend by now. A trend of malpractice if you will. Followed by a trend of acceptance or standardization towards such malpractice. And if you dig a little deeper into these trends — they are often, but not always, connected to some lapse in ethics.&lt;/p&gt;

&lt;p&gt;And if you’re of the mind that ethics and business [and software] cannot mix — I call for you to reconsider and have a conversation. I hope the pressure of shareholders and funding money does not blind your mission or your vision. Try to figure it out.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Just because you can do something, should you?&lt;/li&gt;
  &lt;li&gt;If you should, then how can you do so while being ethical?&lt;/li&gt;
  &lt;li&gt;If you cannot remain ethical, then the least you can do is own it. Don’t deny it. You are a professional, aren’t you?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Perhaps our approach to ethics needs a pivot?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Maybe ethics, as a field, is too broad of a topic? Too abstract and not applicable?&lt;/li&gt;
  &lt;li&gt;Maybe, it is time to reframe our delivery on ethics?&lt;/li&gt;
  &lt;li&gt;Time to step back and reduce the scope so that we can understand better?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So here is me — trying to do that for you. Next time you are working on software just give it a shot and ask yourself this relatable question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;would you let your &lt;strong&gt;_&lt;/strong&gt; use your software?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ll let you fill in the blank. Don’t be lazy and do make it relatable.&lt;/p&gt;

&lt;p&gt;Think about it because your answer should be yes with some level of confidence. It is 2018 and I am trying to take a gradual approach to this topic.&lt;/p&gt;

&lt;p&gt;We are use a lot of software every single day.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;And guess what?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is only the beginning.&lt;/p&gt;

&lt;p&gt;Just wait until the entire planet, and everyone on it, gets a reliable high speed connection. It is not if but when.&lt;/p&gt;

&lt;p&gt;Thank you for reading.&lt;/p&gt;

&lt;p&gt;Sincerely,&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;PS: I know that I am throwing generalities and I hope you can forgive me for the point that I am trying to illustrate.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;PPS: Sorry for the clickbait title — but how else am I going to get you to read about software ethics? Not trying to single out mothers or family members or friends. I am trying to make a point that you should make your work relatable. Think about your end user. There is an actual person sitting on the other side of your code. And guess what? This person is trusting you and your code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;This article was originally published &lt;a href=&quot;https://medium.com/@getaclue_1/would-you-let-your-mother-use-your-software-639fb6f0e3d3&quot;&gt;here&lt;/a&gt; in April 2018&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><category term="software development" /><category term="software engineering" /><summary type="html">Sorry for the clickbait title — but how else am I going to get you to read about software ethics?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn-pro.dprcdn.net/files/acc_603419/V8kt2K" /></entry></feed>