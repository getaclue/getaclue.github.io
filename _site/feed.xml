<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alex Kluew</title>
    <description></description>
    <link>http://getaclue.github.io//</link>
    <atom:link href="http://getaclue.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 03 Aug 2015 16:30:24 -0400</pubDate>
    <lastBuildDate>Mon, 03 Aug 2015 16:30:24 -0400</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Installing Yosemite on E8400</title>
        <description>&lt;p&gt;First and foremost… I like experimenting with different OS environment just so I stay familiar. Besides having Windows, CentOS, and Ubuntu running on my computer, I decided to give OS X another try.&lt;/p&gt;

&lt;p&gt;Computer Hardware:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://ark.intel.com/products/33910/Intel-Core2-Duo-Processor-E8400-6M-Cache-3_00-GHz-1333-MHz-FSB&quot;&gt;Intel Core 2 Duo E8400&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;www.gigabyte.com/products/product-page.aspx?pid=2615&amp;amp;kw=GA-P31-DS3L&quot;&gt;Gigabyte GA-P31-DS3L Motherboard&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.newegg.ca/Product/Product.aspx?Item=N82E16814500187&quot;&gt;Nvidia GTS450 Graphics card&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;4 gb DDR2 Ram (667 MHz)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, my hardware is ‘old’ by today’s standards. However, I try to get the best bang for my buck without upgrading. I only upgrade my hardware when something fails. It has been working well so far. My computer is on 24/7/365 except for random reboots and power outages. I’ve had this PC on 24/7 since 2008. I’ve had it on 24/7/365 since 2010. I am on my second motherboard (lan failed on first one), second CPU cooler (by choice), and a 3rd GPU. This CPU is amazing.&lt;/p&gt;

&lt;p&gt;I have not installed OS X after purchasing a new graphic card &lt;a href=&quot;http://www.newegg.ca/Product/Product.aspx?Item=N82E16814500187&quot;&gt;Nvidia GTS450&lt;/a&gt; earlier this year. I had an old 8600GTS before this graphic card. The prior graphic card had no problem with running OS X 10.6.&lt;/p&gt;

&lt;p&gt;I decided to give the &lt;a href=&quot;http://tonymacx86.com/&quot;&gt;hackintosh project&lt;/a&gt; a shot. I installed &lt;a href=&quot;http://tonymacx86.blogspot.ca/2010/04/iboot-multibeast-install-mac-os-x-on.html&quot;&gt;OS X 10.6&lt;/a&gt; at first. However, I noticed that my GTS450 was not being recognized. I did perform several troubleshooting steps. After searching for a bit, I found out that GTS450 support improved as of 10.7. At this point, I was debating on whether or not to install 10.7 or to jump to 10.10.&lt;/p&gt;

&lt;p&gt;I decided to jump to &lt;a href=&quot;http://www.tonymacx86.com/445-unibeast-install-os-x-yosemite-any-supported-intel-based-pc.html&quot;&gt;Yosemite 10.10&lt;/a&gt; after reading the tonymacx86 forums. A number of users reported successful bootings with Fermi graphic cards. I used my macbook to download the upgrade and make a &lt;a href=&quot;http://www.tonymacx86.com/downloads.php?do=file&amp;amp;id=249&quot;&gt;bootable USB&lt;/a&gt;. The system did not boot until I added the following flags:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GraphicsEnabler=Yes, PCIRootUID=1, npci=0x2000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can find out what each of these flags does &lt;a href=&quot;http://www.tonymacx86.com/basics/104536-troubleshooting-issuing-boot-flags.html&quot;&gt;here&lt;/a&gt;. After the inital install everything booted smoothly. I then ran &lt;a href=&quot;http://www.tonymacx86.com/downloads.php?do=file&amp;amp;id=252&quot;&gt;MultiBeast&lt;/a&gt;. I followed the specifications for my motherboard and installed the appropriate drives. Everything worked after a restart. However, I noticed that my system experienced random freezes.&lt;/p&gt;

&lt;p&gt;There did not appear to be any pattern to the cause of the freeze. The freezing began by not responding to any key presses or mouse clicks. However, I was able to move the mouse across my dual screen setup. After some time, the mouse cursor finally disappeared from the display(s). The system then gives a black screen and instantaneously brings the Yosemite login screen. Upon entering my password and loading Yosemite, the bug report displayed a problem with my graphic card. I spent a few hours looking for a solution.&lt;/p&gt;

&lt;p&gt;Rather than troubleshooting a graphic card that is not natively supported by Apple (yet? will it be?), I am leaning towards upgrading my graphic card. I had previous problems with the graphic card. It is not able to support my two monitors at the maximum resolutions. I am really pushing its performance when I am editing images. Therefore, I am leaning towards upgrading my graphic card.&lt;/p&gt;

&lt;p&gt;Ultimately, I am going to purchase a graphic card that brings my hardware closer to the Mac specifications outlined by Apple AND drives my two monitors easily (at max. resolution).&lt;/p&gt;

&lt;p&gt;In conclusion, &lt;a href=&quot;http://tonymacx86.com/&quot;&gt;this group of people&lt;/a&gt; has done a fantastic job in easing the installation of OS X on any Intel-based hardware. Their guides are phenomenal. The difference between installing OS X 10.6 and 10.10 is night and day. It used to take me hours (or days) to research, prepare, compile, and install - took me a few hours for 10.10.&lt;/p&gt;

&lt;p&gt;Not only do I have a working OS, but I also have a fully bootable USB that can be natively plugged into any Intel-based machine. Amazing.&lt;/p&gt;

&lt;p&gt;Resource used:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://www.tonymacx86.com/basics/104536-troubleshooting-issuing-boot-flags.html
http://www.tonymacx86.com/basics/116220-do-i-need-graphicsenabler-injection-not.html
http://www.tonymacx86.com/graphics/131937-chimera-hd-graphics-bootflags-igpenabler-igplatformid-igpdeviceid.html
http://www.tonymacx86.com/yosemite-desktop-guides/144426-how-install-os-x-yosemite-using-clover.html
http://www.tonymacx86.com/445-unibeast-install-os-x-yosemite-any-supported-intel-based-pc.html
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sun, 21 Dec 2014 00:00:00 -0500</pubDate>
        <link>http://getaclue.github.io//2014/12/21/Installing-Yosemite-on-E8400/</link>
        <guid isPermaLink="true">http://getaclue.github.io//2014/12/21/Installing-Yosemite-on-E8400/</guid>
        
        
      </item>
    
      <item>
        <title>A different archival strategy for pictures on CentOS 7</title>
        <description>&lt;p&gt;I decided to learn about bash scripting in order to encrypt all of my pictures and movies before uploading them. More specifically, I wanted individual encryption and not an encryption of an entire archive of pictures and movies.&lt;/p&gt;

&lt;p&gt;This is an exercise in improving my backups. I have a habit of not downloading an entire archive because the size of an archive is typically large. To solve this problem, I want to mimick my entire library by preserving the file structure on a server. However, I wanted to have all of my files encrypted prior to having them uploaded.&lt;/p&gt;

&lt;p&gt;I think that by sampling a few files out of an uploaded directory will allow me to speed up my recovery as compared to downloading the entire archive. Therefore, I needed a way to encrypt and decrypt my files.&lt;/p&gt;

&lt;p&gt;Goals that I wanted to achieve for encryption:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;automated&lt;/li&gt;
  &lt;li&gt;password had to be entered as an argument&lt;/li&gt;
  &lt;li&gt;cipher had to be chosen as an argument&lt;/li&gt;
  &lt;li&gt;after encryption all of the file names had to remain original&lt;/li&gt;
  &lt;li&gt;all JPG files had to be encrypted individually&lt;/li&gt;
  &lt;li&gt;every encrypted file had to be saved into /enc/ folder with the original file name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Goals that I wanted to achieve for decryption:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;automated&lt;/li&gt;
  &lt;li&gt;password and cipher entered as arguments&lt;/li&gt;
  &lt;li&gt;all decrypted files had to maintain its original file name&lt;/li&gt;
  &lt;li&gt;all JPG files decrypted individually&lt;/li&gt;
  &lt;li&gt;every decrypted file had to be saved into /dec/ folder with the original file name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Resources used:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://www.linux.com/learn/tutorials/284789-writing-a-simple-bash-script-
http://www.linux-magazine.com/Online/Features/OpenSSL-with-Bash
http://www.openssl.org/docs/apps/ciphers.html
http://www.openssl.org/docs/apps/openssl.html
http://nixtricks.wordpress.com/tag/aes-256-cbc/
https://www.madboa.com/geek/openssl/
http://www.cyberciti.biz/faq/bash-loop-over-file/
http://tldp.org/LDP/abs/html/loops1.html
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Wed, 15 Oct 2014 00:00:00 -0400</pubDate>
        <link>http://getaclue.github.io//2014/10/15/A-different-archival-strategy-for-pictures/</link>
        <guid isPermaLink="true">http://getaclue.github.io//2014/10/15/A-different-archival-strategy-for-pictures/</guid>
        
        
      </item>
    
      <item>
        <title>Installing Mono on CentOS 7</title>
        <description>&lt;h1 id=&quot;obtain-necessary-gpg-keys&quot;&gt;Obtain necessary gpg keys&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;mkdir Mono
cd Mono
wget http://download.mono-project.com/repo/xamarin.gpg
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;import-gpg-key&quot;&gt;Import gpg key&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo rpm --import xamarin.gpg
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;add-mono-package-repository&quot;&gt;Add Mono package repository&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo yum-config-manager --add-repo http://download.mono-project.com/repo/centos/
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;add-epel&quot;&gt;Add EPEL&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo rpm -Uvh http://download.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-2.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;update-everything&quot;&gt;Update everything&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;start-installing-mono&quot;&gt;Start installing Mono&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo yum install mono-devel
sudo yum install mono-complete
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;optional-test-your-mono-installation&quot;&gt;Optional: Test your Mono installation&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;http://www.mono-project.com/docs/getting-started/mono-basics/
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;running-mono&quot;&gt;Running Mono&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;cd ~/foo/bar/
mono foo.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;http://www.mono-project.com/docs/getting-started/install/linux/
http://www.mono-project.com/docs/getting-started/mono-basics/
https://fedoraproject.org/wiki/EPEL/FAQ	
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 11 Oct 2014 00:00:00 -0400</pubDate>
        <link>http://getaclue.github.io//2014/10/11/Installing-Mono-on-CentOS-7/</link>
        <guid isPermaLink="true">http://getaclue.github.io//2014/10/11/Installing-Mono-on-CentOS-7/</guid>
        
        
      </item>
    
      <item>
        <title>Configuring SSH Server on CentOS 7</title>
        <description>&lt;h1 id=&quot;display-all-install-packages-in-centos&quot;&gt;Display all install packages in CentOS&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;rpm -qa
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;changes-to-etcsshsshdconfig&quot;&gt;Changes to /etc/ssh/sshd_config&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;Protocol 2
AllowUsers alice bob
PermitRootLogin no
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;changes-to-iptables&quot;&gt;Changes to iptables&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --set --name ssh --rsource
iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent ! --rcheck --seconds 60 --hitcount 4 --name ssh --rsource -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;resources-used&quot;&gt;Resources Used&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;http://vim.wikia.com/wiki/Insert_current_date_or_time
http://daringfireball.net/projects/markdown/syntax
http://www.linfo.org/sbin.html
http://www.lifelinux.com/how-to-install-openssh-on-centos-redhat/
http://wiki.centos.org/HowTos/Network/IPTables
http://wiki.centos.org/HowTos/Network/SecuringSSH
http://www.centos.org/docs/5/html/Deployment_Guide-en-US/s1-ssh-configfiles.html
http://thesimplesynthesis.com/article/compress-pdf#compress-pdf
https://gist.github.com/quintes/5153247
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Wed, 08 Oct 2014 13:09:09 -0400</pubDate>
        <link>http://getaclue.github.io//2014/10/08/Configuring-SSH-on-CentOS-7/</link>
        <guid isPermaLink="true">http://getaclue.github.io//2014/10/08/Configuring-SSH-on-CentOS-7/</guid>
        
        
      </item>
    
      <item>
        <title>Using wget in CentOS 6.5</title>
        <description>&lt;h1 id=&quot;using-wget-in-centos-65&quot;&gt;Using wget in CentOS 6.5&lt;/h1&gt;

&lt;p&gt;First of all, everything that you need is here:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
https://www.gnu.org/software/wget/
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, we need to have somewhere to save the &lt;em&gt;stuff&lt;/em&gt; that you would like to download. To do that, simply make a new place &lt;code&gt;mkdir /some/path&lt;/code&gt; and then go there by using &lt;code&gt;cd /some/path&lt;/code&gt;. Good. Now, you have somewhere to store your stuff.&lt;/p&gt;

&lt;p&gt;My goal is to download an entire website. That is, I want some website to be available for my offline usage. Everything.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
wget --limit-rate=50k --no-clobber --convert-links --wait=5 --random-wait 
-r -p -E -e robots=off -U Mozilla http://www.foo.bar
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, why did I use the settings that I used?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;used &lt;code&gt;--limit-rate=50k&lt;/code&gt; to limit the download speed of each file to 50KB/s&lt;/li&gt;
  &lt;li&gt;used &lt;code&gt;-- no-clobber&lt;/code&gt; so that I do not overwrite existing files. (multiple savings of the same file is prevented)&lt;/li&gt;
  &lt;li&gt;used &lt;code&gt;--convert-links&lt;/code&gt; to ensure that all of the downloaded links point locally and do not point to any external places&lt;/li&gt;
  &lt;li&gt;used &lt;code&gt;--wait=5&lt;/code&gt; to wait 5 seconds between each new request for a new file&lt;/li&gt;
  &lt;li&gt;used &lt;code&gt;--random-wait&lt;/code&gt; to try and reduce the load on the server. It &lt;strong&gt;needs&lt;/strong&gt; –wait attribute&lt;/li&gt;
  &lt;li&gt;used &lt;code&gt;-r&lt;/code&gt; for recursive downloading of the entire website&lt;/li&gt;
  &lt;li&gt;used &lt;code&gt;-p&lt;/code&gt; to download all of the necessary files to display the html page properly&lt;/li&gt;
  &lt;li&gt;used &lt;code&gt;-E&lt;/code&gt; for appending &lt;code&gt;.html&lt;/code&gt; to files that have otherwise other extensions such as &lt;code&gt;something.else?suchas25&lt;/code&gt; to &lt;code&gt;something.else?suchas25.html&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;used &lt;code&gt;-e robots=off&lt;/code&gt; to by pass possible robot exclusion&lt;/li&gt;
  &lt;li&gt;used &lt;code&gt;-U Mozilla&lt;/code&gt; to identify as a Mozilla client and not &lt;code&gt;Wget/VERSION&lt;/code&gt; client&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;# Ideas developed by using #&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
http://www.thegeekstuff.com/2009/09/
          the-ultimate-wget-download-guide-with-15-awesome-examples/
http://www.kossboss.com/linux---wget-full-website
http://www.rationallyparanoid.com/articles/wget.html
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(Side note, system information: &lt;code&gt;uname-a&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Linux localhost.localdomain 2.6.32-431.11.2.el6.x86_64 
#1 SMP Tue Mar 25 19:59:55 UTC 2014 
x86_64 
GNU/Linux
&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Apr 2014 00:00:00 -0400</pubDate>
        <link>http://getaclue.github.io//2014/04/30/Using-wget/</link>
        <guid isPermaLink="true">http://getaclue.github.io//2014/04/30/Using-wget/</guid>
        
        
      </item>
    
      <item>
        <title>Installing XChat CentOS 6.5 for Beginners</title>
        <description>&lt;h1 id=&quot;installing-xchat-for-total-beginners&quot;&gt;Installing XChat for Total Beginners&lt;/h1&gt;

&lt;p&gt;Make a dir to install it in and go there&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
mkdir /some/path/
cd /some/path/
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Download the sourcecode (link used in March 2014) and place it in the newely created directory in the step above.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
http://xchat.org/files/source/2.8/xchat-2.8.8.tar.bz2
http://xchat.org/files/source/2.8/xchat-2.8.8.tar.xz
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Unpack the archive:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
tar -xzvf xchat-x.x.x.tar.xz
tar -xjvf xchat-x.x.x.tar.bz2
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Go to the newely unpacked directory:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
cd xchat-2.8.8
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Run the configuration script:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
./configure
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Compile the program:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
make
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finally, install the program:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
make install
&lt;/code&gt;
***&lt;/p&gt;

&lt;h2 id=&quot;problems-ive-encountered-while-setting-up&quot;&gt;Problems I’ve encountered while setting up&lt;/h2&gt;

&lt;p&gt;While trying to compile the source code, I’ve gotten the following error:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
configure: error: no acceptable C compiler found in $PATH
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The solution? We are missing the gcc, which can be installed via the development tools kit. In my case, I didn’t solely look for the gcc but I installed the entire pack because I knew I would be using the tools eventually.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
yum groupinstall &quot;Development tools&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Alternatively, this same command can be ran on Debian Base OS:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
apt-get install build-essential
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And yes, I did run all of this as root. If you are not root, place &lt;code&gt;sudo&lt;/code&gt; in front of the commands that you have no direct access to and enter your password.&lt;/p&gt;

&lt;p&gt;(Side note, system information: &lt;code&gt;uname-a&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Linux localhost.localdomain 2.6.32-431.11.2.el6.x86_64 
#1 SMP Tue Mar 25 19:59:55 UTC 2014 
x86_64 
GNU/Linux
&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Mar 2014 00:00:00 -0400</pubDate>
        <link>http://getaclue.github.io//2014/03/16/installing-xChat/</link>
        <guid isPermaLink="true">http://getaclue.github.io//2014/03/16/installing-xChat/</guid>
        
        
      </item>
    
      <item>
        <title>Configuring PrivateInternetAccess VPN</title>
        <description>&lt;h1 id=&quot;installing-openvpn-and-configuring-for-privateinternetaccess&quot;&gt;Installing OpenVPN and Configuring for PrivateInternetAccess&lt;/h1&gt;
&lt;p&gt;Go to /etc/&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
cd /etc/
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the correct repo, which you are probably missing:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
wget
 http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm
rpm -Uvh rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm
(U - Update, v - verbose, h - has)
&lt;/code&gt;
Install OpenVPN from the new repo&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
yum install openvpn
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Download correct preconfigured files from www.privateinternetaccess.com&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
wget https://www.privateinternetaccess.com/openvpn/openvpn.zip
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make a new directory, move the downloaded file into the directory, unzip the contents, and go into the directory&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
mv openvpn.zip ./openvpn
unzip openvpn.zip
cd openvpn
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Test to see if everything is working properly. Be prepared to enter your self-generated password and username (and not the one provided for you).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
openvpn Canada.ovpn
	OR 
openvpn *.ovpn (* - any other location from the list)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ctrl+c&lt;/code&gt; to terminate the connection if everything is successful.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;optional&quot;&gt;Optional:&lt;/h3&gt;

&lt;p&gt;In order to run openvpn in the background, a useful utility is available.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
yum install screen
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, when you would want to initialize an instance, simple do&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
screen openvpn *.ovpn
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and, now, the instance of openvpn can be run within the screen. Thus, we can safeuly press &lt;code&gt;ctrl + a + d&lt;/code&gt; and the screen will disappear but the session will continue to be open. &lt;strong&gt;Super Useful&lt;/strong&gt;. Once you are ready to terminate the session, you can simply close your machine, or&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
screen -ls
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command will open all of the screen’s running instances. Simply find the one that is dedicated to the openvpn and then open the session.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
screen -x &amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once inside, simple close it and exit the screen instance.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
ctrl + c
exit
	OR
ctrl + c
ctrl + d
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Aside: If you want, you can start the screen with a custom name. When you do this, it is much easier to find your specific open session if you have multiple screen sessions open. Simply do:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
screen -S &amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And yes, I did run all of this as root. If you are not root, place &lt;code&gt;sudo&lt;/code&gt; in front of the commands that you have no direct access to and enter your password.&lt;/p&gt;

&lt;p&gt;(Side note, system information: &lt;code&gt;uname-a&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Linux localhost.localdomain 2.6.32-431.11.2.el6.x86_64 
#1 SMP Tue Mar 25 19:59:55 UTC 2014 
x86_64 
GNU/Linux
&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Mar 2014 00:00:00 -0400</pubDate>
        <link>http://getaclue.github.io//2014/03/16/configuring-PIA/</link>
        <guid isPermaLink="true">http://getaclue.github.io//2014/03/16/configuring-PIA/</guid>
        
        
      </item>
    
  </channel>
</rss>
