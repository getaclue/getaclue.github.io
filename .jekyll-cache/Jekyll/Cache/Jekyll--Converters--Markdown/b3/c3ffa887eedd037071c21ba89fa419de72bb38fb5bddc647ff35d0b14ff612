I"¦0<p>This weekend I wanted to play with <a href="https://tailwindcss.com/">tailwindcss</a> and what better way to do it then with a project. My project was going to be simple : <strong>write a tutorial on authentication in nodejs apps</strong>. And I did complete the project, but I struggled to make it easy as possible to follow. I wrote this just so I could break down the next few entries. I ended up using a few packages that I absolutely couldnâ€™t go without and that added to the scope. I also spent lots of time on research and seeing what is out there :</p>

<p><img src="/assets/images/2020-03-16/lots_of_tabs.png" alt="lots of tabs" style="max-width:100%" /></p>

<p>I figured that a good post prior to me re-doing the project would be to talk about thinking of authentication. I will be breaking down the project into smaller parts. I figured in this post, I will outline what I am thinking about.</p>

<h2 id="authentication">Authentication</h2>

<h3 id="background-refresher">Background refresher</h3>

<p>First thing that I did when beginning the project was go to <a href="https://owasp.org/www-project-top-ten/">OWASP</a> and remind myself of the common pitfalls in authentication, and password storage. After all, if I am putting a tutorial out there I want it to be somewhat secure.</p>

<p>Links used in background refresher:</p>

<ul>
  <li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html</a></li>
  <li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html</a></li>
  <li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html</a></li>
</ul>

<h3 id="decision-time">Decision time</h3>

<p>I knew that I wanted to store the information in a database. I did not want to rely on a third party service. So, for data processing and database communication I opted for <a href="https://sequelize.org">sequilize</a> package. <a href="https://sequelize.org">Sequilize</a> is great in that you can switch databases and maintain data integrity because you describe all of your data in code in one place.</p>

<p>For this tutorial, I wanted to store username, email, and password. I did not want to store the password as plaintext for this tutorial even though I was trying to keep the tutorial simple. My goto solution for password encryption is usually the bcrypt algorithm. So, for this project, naturally, I decided to use the <a href="https://www.npmjs.com/package/bcrypt">bcrypt</a> package.</p>

<p>I couldnâ€™t decide if I wanted to teach about <a href="https://www.npmjs.com/package/jsonwebtoken">jwt</a> tokens or session <a href="https://expressjs.com/en/resources/middleware/cookie-parser.html">cookies</a>. Afterall, nowadays you need to be comfortable in both. So, I opted out for storing jwt token in the cookies. Using cookies is usually my default go-to because the technology is proven, safe, and reliable. Cookies have been here since the beginning on web apps.</p>

<p>However, as I proceeded through my project, I realized that this went beyond the scope of my initial tutorial. This added a level of authorization to our authentication tutorial. I finished this authorization not realizing that I will have to backtrack in my actual write up and create several tutorials out of it.</p>

<h3 id="how-to-connect-sequilize-to-expressjs-app">How to connect Sequilize to ExpressJS app</h3>

<p>This tutorial will talk about the setup of sequilize and a simple model of our user that will be used in follow up tutorials. The user will contain username, password, and email attributes. Maybeâ€¦ I will add token attribute and confirmation_token attributes for confirmation steps. Havenâ€™t fully decided on this.</p>

<h3 id="how-to-add-authentication-to-expressjs-app-with-sequilize">How to add authentication to ExpressJS app with Sequilize</h3>

<p>For the sake of my tutorial authentication will be split into : user sign up, user login, and user password reset. I will have to mention about <a href="https://www.npmjs.com/package/bcrypt">bcrypt</a>.</p>

<h3 id="how-to-add-authorization-to-expressjs-app-with-sequilize">How to add authorization to ExpressJS app with Sequilize</h3>

<p>For this tutorial I will be mentioning the usage of <a href="https://www.npmjs.com/package/jsonwebtoken">jwt</a> and session <a href="https://expressjs.com/en/resources/middleware/cookie-parser.html">cookies</a>. These details kind of depend on the clients that will be using our API and whether or not we have an API. I used both to show the different ways of implementing authorization. Personally I prefer cookies as they have been battle tested in various environments, but sometimes for things like mobile apps, you need to use something like <a href="https://www.npmjs.com/package/jsonwebtoken">jwt</a>. I simply saved my generated <a href="https://www.npmjs.com/package/jsonwebtoken">jwt</a> token in our <a href="https://expressjs.com/en/resources/middleware/cookie-parser.html">cookies</a> so that we can play with both :)</p>

<p>Here is what it looked like when finished :</p>

<p><img src="/assets/images/2020-03-16/sign_in.png" alt="sign in" style="max-width:100%" />
<img src="/assets/images/2020-03-16/sign_up.png" alt="sign up" style="max-width:100%" />
<img src="/assets/images/2020-03-16/forgot_password.png" alt="forgot password" style="max-width:100%" />
<img src="/assets/images/2020-03-16/profile.png" alt="profile" style="max-width:100%" /></p>

<p>I am not sure if I will have this UI for the written up tutorials or if I will come up with something else.</p>

<hr />

<p>PS: When most people think of authentication they actually are referring to authorization. Soâ€¦ you may have to explain this to your client. It is a good idea to have a walk through of the components that you need to build. You can create deliverables out of them.</p>

<p>The example above shows the authorization and authentication of a simple user profile using <a href="https://www.npmjs.com/package/jsonwebtoken">jwt</a> and <a href="https://expressjs.com/en/resources/middleware/cookie-parser.html">cookies</a>. The information is stored in a sqlite3 database in the local directory and is using <a href="https://sequelize.org">sequilize</a> driver for data access. The ui is build using <a href="https://tailwindcss.com/">tailwindcss</a> (I have a tutorial on that tailwindcss which you can visit <a href="https://getaclue.me/2020/03/13/javascript-nodejs-express-tailwind">here</a>). With the help of <a href="https://www.npmjs.com/package/jsonwebtoken">jwt</a> our software is also ready to create an api for mobile or desktop clients if there was ever a need.</p>

<p>I was not tracking my time on this but it says I used about 3 hours this weekend in VS Code. Which includes writing in VS Code as well. So maybe divide in half? About 1 hour or 1.5 hours on this code for sure I would think.</p>

<p>links that I may or may not have used (ie tabs open at the time of writing this article):</p>

<ul>
  <li><a href="https://www.google.com/search?newwindow=1&amp;ei=TX5tXpKkC-Gc_Qb9oKyoDQ&amp;q=web+authorization&amp;oq=web+authorization&amp;gs_l=psy-ab.3..0l3j0i22i30l7.74208935.74213872..74213997...7.4..2.512.3222.11j2j3j1j1j1......0....1..gws-wiz.......0i71j0i67j0i131j0i273j0i10.8rqUb2ZDcL4&amp;ved=0ahUKEwjS_tTjo5voAhVhTt8KHX0QC9UQ4dUDCAs&amp;uact=5">link</a></li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization">link</a></li>
  <li><a href="https://owasp.org/www-project-top-ten/">link</a></li>
  <li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication">link</a></li>
  <li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html">link</a></li>
  <li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#modern-algorithms">link</a></li>
  <li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html">link</a></li>
  <li><a href="https://www.google.com/search?q=nodejs+authorization&amp;oq=nodejs+authorization&amp;aqs=chrome..69i57.6185j0j7&amp;sourceid=chrome&amp;ie=UTF-8">link</a></li>
  <li><a href="https://jasonwatmore.com/post/2018/11/28/nodejs-role-based-authorization-tutorial-with-example-api">link</a></li>
  <li><a href="https://www.google.com/search?newwindow=1&amp;ei=66VuXo_4NpHdtAbsxbhA&amp;q=bcrypt+javascript&amp;oq=bcrypt+javascript&amp;gs_l=psy-ab.3..0l4j0i22i30l6.3087.4669..4924...0.2..0.281.1501.7j5j1......0....1..gws-wiz.......0i71j0i67.TeG0giixnYk&amp;ved=0ahUKEwjPmYvavZ3oAhWRLs0KHewiDggQ4dUDCAs&amp;uact=5">link</a></li>
  <li><a href="https://www.npmjs.com/package/bcrypt">link</a></li>
  <li><a href="https://www.google.com/search?newwindow=1&amp;q=middleware+node+j&amp;spell=1&amp;sa=X&amp;ved=2ahUKEwip8eafwp3oAhVzds0KHelUDW0QBSgAegQIDRAm">link</a></li>
  <li><a href="https://expressjs.com/en/resources/middleware/cookie-session.html">link</a></li>
  <li><a href="https://www.google.com/search?q=jwt+res&amp;oq=jwt+res&amp;aqs=chrome..69i57.3131j0j7&amp;sourceid=chrome&amp;ie=UTF-8">link</a></li>
  <li><a href="https://stackabuse.com/authentication-and-authorization-with-jwts-in-express-js/">link</a></li>
  <li><a href="https://www.sohamkamani.com/blog/javascript/2019-03-29-node-jwt-authentication/">link</a></li>
  <li><a href="https://www.npmjs.com/package/jsonwebtoken">link</a></li>
  <li><a href="https://www.google.com/search?q=nodejs+response+authorization+header&amp;oq=nodejs+response+authorization+header&amp;aqs=chrome..69i57.8306j0j7&amp;sourceid=chrome&amp;ie=UTF-8">link</a></li>
  <li><a href="https://stackoverflow.com/questions/34589272/how-to-set-authorization-headers-with-nodejs-and-express">link</a></li>
  <li><a href="https://www.google.com/search?q=cookie-parser&amp;oq=cookie-parser&amp;aqs=chrome..69i57j69i60.247j0j7&amp;sourceid=chrome&amp;ie=UTF-8">link</a></li>
  <li><a href="https://riptutorial.com/node-js/example/21767/setting-cookies-with-cookie-parser">link</a></li>
  <li><a href="https://www.tutorialspoint.com/expressjs/expressjs_cookies.htm">link</a></li>
  <li><a href="https://handlebarsjs.com/guide/builtin-helpers.html#if">link</a></li>
  <li><a href="https://tailwindcss.com/components/forms">link</a></li>
  <li><a href="https://www.google.com/search?q=nodejs+redirect+response&amp;oq=nodejs+redirect+response&amp;aqs=chrome..69i57.2927j0j7&amp;sourceid=chrome&amp;ie=UTF-8">link</a></li>
  <li><a href="https://stackoverflow.com/questions/11355366/how-to-redirect-users-browser-url-to-a-different-page-in-nodejs">link</a></li>
  <li><a href="https://www.google.com/search?q=build+middleweare&amp;oq=build+middleweare&amp;aqs=chrome..69i57.2198j0j7&amp;sourceid=chrome&amp;ie=UTF-8">link</a></li>
  <li><a href="https://expressjs.com/en/resources/middleware.html">link</a></li>
  <li><a href="https://expressjs.com/en/resources/middleware/cookie-parser.html">link</a></li>
  <li><a href="https://github.com/expressjs/cookie-parser/blob/master/test/cookieParser.js">link</a></li>
  <li><a href="https://github.com/sequelize/sequelize">link</a></li>
  <li><a href="https://sequelize.org/master/manual/polymorphic-associations.html">link</a></li>
  <li><a href="https://sequelize.org/master/manual/model-querying-basics.html">link</a></li>
  <li><a href="https://stackoverflow.com/questions/40076638/compare-passwords-bcryptjs/40077486">link</a></li>
  <li><a href="https://www.npmjs.com/package/bcrypt">link</a></li>
  <li><a href="https://teamtreehouse.com/library/install-and-use-sequelize-cli">link</a></li>
  <li><a href="https://medium.com/@zhhjoseph/getting-started-with-sequelize-dd6045f366e6">link</a></li>
  <li><a href="https://openclassrooms.com/en/courses/5614116-go-full-stack-with-node-js-express-and-mongodb/5656301-set-up-authentication-middleware">link</a></li>
  <li><a href="https://stackabuse.com/handling-authentication-in-express-js/">link</a></li>
  <li><a href="https://stackabuse.com/implementing-user-authentication-the-right-way/">link</a></li>
  <li><a href="https://github.com/jkasun/stack-abuse-express-authentication/blob/master/app.js">link</a></li>
</ul>

:ET