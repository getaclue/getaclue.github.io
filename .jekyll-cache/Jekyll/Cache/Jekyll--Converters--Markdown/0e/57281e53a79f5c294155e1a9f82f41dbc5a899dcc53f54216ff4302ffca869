I"‹,<p>Today, I was browing again in the <a href="https://www.amazon.ca/Data-Structures-Algorithms-Michael-Goodrich/dp/1118771338/">textbook</a> and for some reason I wanted to implement a simple Ceaser cipher. In the process, I also re-found-out that Strings are immutable in java. I suppose it makes sense then when StringBuilder and the such are used. I also found the following two statements interesting:</p>

<blockquote>
  <p>â€¦ that characters are represented in Unicode by integer code points â€¦</p>
</blockquote>

<blockquote>
  <p>â€¦ upper letters of the Latin alphabet are consecutive (for simplicity â€¦</p>
</blockquote>

<p>and you know what? No one has ever connected these two ideas together like that or pointed it out. Iâ€™ve used these exact ideas before and never considered how fortunate that everything just works (= Why â€” <em>duh</em> â€” <code class="highlighter-rouge">A</code> is obviously <code class="highlighter-rouge">65</code> and <code class="highlighter-rouge">B</code> is <code class="highlighter-rouge">66</code>.</p>

<p>Anywho, I wanted to implement this shifting algorithm and this is how far we got:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">static</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">exit</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CeaserCypher</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">encryption</span> <span class="o">=</span> <span class="s">"DEFGHIJKLMNOPQRSTUVWXYZABC"</span><span class="o">;</span>
<span class="c1">//        String decryption = "XYZABCDEFGHIJKLMNOPQRSTUVW";</span>
        <span class="kt">char</span><span class="o">[]</span> <span class="n">encryptionCode</span> <span class="o">=</span> <span class="n">encryption</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
<span class="c1">//        char[] decryptionCode = decryption.toCharArray();</span>

        <span class="nc">String</span> <span class="n">msg</span> <span class="o">=</span> <span class="s">"THE EAGLE IS IN PLAY; MEET AT JOEâ€™S."</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">result</span> <span class="o">=</span> <span class="n">transform</span><span class="o">(</span><span class="n">msg</span><span class="o">,</span> <span class="n">encryptionCode</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">expected</span> <span class="o">=</span> <span class="s">"WKH HDJOH LV LQ SODB; PHHW DW MRHâ€™V."</span><span class="o">;</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">transform</span><span class="o">(</span><span class="n">msg</span><span class="o">,</span> <span class="n">encryptionCode</span><span class="o">));</span>

        <span class="kt">char</span><span class="o">[]</span> <span class="n">resultChar</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
        <span class="kt">char</span><span class="o">[]</span> <span class="n">expectedChar</span> <span class="o">=</span> <span class="n">expected</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">resultChar</span><span class="o">.</span><span class="na">length</span> <span class="o">!=</span> <span class="n">expectedChar</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">resultChar</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">_resultChar</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">resultChar</span><span class="o">[</span><span class="n">index</span><span class="o">];</span>
            <span class="kt">int</span> <span class="n">_expectedChar</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">expectedChar</span><span class="o">[</span><span class="n">index</span><span class="o">];</span>

            <span class="k">if</span> <span class="o">((</span><span class="n">_resultChar</span> <span class="o">^</span> <span class="n">_expectedChar</span><span class="o">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"resultChar[index] : "</span> <span class="o">+</span> <span class="n">resultChar</span><span class="o">[</span><span class="n">index</span><span class="o">]</span> <span class="o">+</span> <span class="s">"\t should be : "</span> <span class="o">+</span> <span class="n">expectedChar</span><span class="o">[</span><span class="n">index</span><span class="o">]);</span>
                <span class="n">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"All good!"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">transform</span><span class="o">(</span><span class="nc">String</span> <span class="n">messadge</span><span class="o">,</span> <span class="kt">char</span><span class="o">[]</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">char</span><span class="o">[]</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messadge</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">message</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="nc">Character</span><span class="o">.</span><span class="na">isUpperCase</span><span class="o">(</span><span class="n">message</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">replaceWith</span> <span class="o">=</span> <span class="n">message</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">-</span> <span class="sc">'A'</span><span class="o">;</span>
                <span class="n">message</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">key</span><span class="o">[</span><span class="n">replaceWith</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="k">new</span> <span class="nf">String</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>â€¦ and I wish I could take credit for this but alas. Followed along with the book and after much back and forth I ended up with pretty much exactly the same version as in the book. This is why, if you notice, there is a decoding key but I never even explored that. Was fun for a minute =)</p>

<p><em>Side note</em>: I am not sure why, but I have a special place for character encoding. I think language construction (tables, lex, state machines, and so onâ€¦) and reading <a href="https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/">The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)</a> made me appreciate the idea that 65 is A. I like to revisit and re-read Joel from time to time.</p>

<p>â€¦ oh and probably the fact that I deal with such things day-to-day in my job also keeps the interest. You knowâ€¦ Canadaâ€¦ English and French ;-)</p>

<p>Oh and I finally configured and properly installed jenv, java11, and maven (&amp; got it working with the other java installations). Should be much smoother now and I want to give heroku and java a try if I have a second this weekend.</p>

<h2 id="links">Links</h2>

<ul>
  <li>A lot of these stemmed from this : <code class="highlighter-rouge">Warning: Cask 'java' is already installed.</code></li>
  <li><a href="https://github.com/Homebrew/homebrew-cask/issues/49716">brew undefined method `undentâ€™ #49716</a></li>
  <li><a href="https://github.com/Homebrew/brew/issues/4494"> brew uninstall -&gt; Error: mpfr@2: undefined method `undentâ€™ #4494 </a></li>
  <li><a href="https://github.com/Homebrew/homebrew-cask/issues/49716#issuecomment-410842187">Error: undefined method undent for String</a></li>
  <li><a href="https://devcenter.heroku.com/articles/getting-started-with-java#prepare-the-app">Getting Started on Heroku with Java</a></li>
  <li><a href="https://gist.github.com/lancejpollard/1978404#basic-html-meta-tags">Basic HTML Meta Tags</a></li>
  <li><a href="https://www.w3.org/TR/microdata/">HTML Microdata</a></li>
  <li>I had to look this upâ€¦ <em>Again</em> â€¦ <a href="https://stackoverflow.com/a/52524114">How do I install OpenJDK Java 11 on Mac OSX allowing version switching?</a></li>
</ul>

<p>that is it for now &amp; I still have the pages for series and sequences open.</p>

<p>See you tomorrow.</p>

:ET